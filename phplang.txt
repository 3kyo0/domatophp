<functioncall> = abs(<fuzzmixed>)
<functioncall> = acos(<fuzzfloat>)
<functioncall> = acosh(<fuzzfloat>)
<functioncall> = addcslashes(<fuzzstring>, <fuzzstring>)
<functioncall> = addslashes(<fuzzstring>)
<functioncall> = array_change_key_case(<fuzzarray>, <fuzzint>)
<functioncall> = array_chunk(<fuzzarray>, <fuzzint>, <fuzzbool>)
<functioncall> = array_column(<fuzzarray>, <fuzzmixed>, <fuzzmixed>)
<functioncall> = array_combine(<fuzzarray>, <fuzzarray>)
<functioncall> = array_count_values(<fuzzarray>)
<functioncall> = array_diff_assoc(<fuzzarray>, <fuzzarray>, <fuzzarray>)
<functioncall> = array_diff(<fuzzarray>, <fuzzarray>, <fuzzarray>)
<functioncall> = array_diff_key(<fuzzarray>, <fuzzarray>, <fuzzarray>)
<functioncall> = array_diff_uassoc(<fuzzarray>, <fuzzarray>, <fuzzarray>, <fuzzcallable>)
<functioncall> = array_diff_ukey(<fuzzarray>, <fuzzarray>, <fuzzarray>, <fuzzcallable>)
<functioncall> = array_fill(<fuzzint>, <fuzzint>, <fuzzmixed>)
<functioncall> = array_fill_keys(<fuzzarray>, <fuzzmixed>)
<functioncall> = array_filter(<fuzzarray>, <fuzzcallable>, <fuzzint>)
<functioncall> = array_flip(<fuzzarray>)
<functioncall> = array_intersect_assoc(<fuzzarray>, <fuzzarray>, <fuzzarray>)
<functioncall> = array_intersect(<fuzzarray>, <fuzzarray>, <fuzzarray>)
<functioncall> = array_intersect_key(<fuzzarray>, <fuzzarray>, <fuzzarray>)
<functioncall> = array_intersect_uassoc(<fuzzarray>, <fuzzarray>, <fuzzarray>, <fuzzcallable>)
<functioncall> = array_intersect_ukey(<fuzzarray>, <fuzzarray>, <fuzzarray>, <fuzzcallable>)
<functioncall> = array_key_exists(<fuzzmixed>, <fuzzarray>)
<functioncall> = array_key_first(<fuzzarray>)
<functioncall> = array_key_last(<fuzzarray>)
<functioncall> = array_keys(<fuzzarray>)
<functioncall> = array_keys(<fuzzarray>, <fuzzmixed>, <fuzzbool>)
<functioncall> = array_map(<fuzzcallable>, <fuzzarray>, <fuzzarray>)
<functioncall> = array_merge(<fuzzarray>)
<functioncall> = array_merge_recursive(<fuzzarray>)
<functioncall> = array_multisort(<fuzzarrayreference>, <fuzzmixed>, <fuzzmixed>, <fuzzmixed>)
<functioncall> = array_pad(<fuzzarray>, <fuzzint>, <fuzzmixed>)
<functioncall> = array_pop(<fuzzarrayreference>)
<functioncall> = array_product(<fuzzarray>)
<functioncall> = array_push(<fuzzarrayreference>, <fuzzmixed>)
<functioncall> = array_rand(<fuzzarray>, <fuzzint>)
<functioncall> = array_reduce(<fuzzarray>, <fuzzcallable>, <fuzzmixed>)
<functioncall> = array_replace(<fuzzarray>, <fuzzarray>)
<functioncall> = array_replace_recursive(<fuzzarray>, <fuzzarray>)
<functioncall> = array_reverse(<fuzzarray>, <fuzzbool>)
<functioncall> = array_search(<fuzzmixed>, <fuzzarray>, <fuzzbool>)
<functioncall> = array_shift(<fuzzarrayreference>)
<functioncall> = array_slice(<fuzzarray>, <fuzzint>, <fuzzint>, <fuzzbool>)
<functioncall> = array_splice(<fuzzarrayreference>, <fuzzint>, <fuzzint>, <fuzzmixed>)
<functioncall> = array_sum(<fuzzarray>)
<functioncall> = array_udiff_assoc(<fuzzarray>, <fuzzarray>, <fuzzarray>, <fuzzcallable>)
<functioncall> = array_udiff(<fuzzarray>, <fuzzarray>, <fuzzarray>, <fuzzcallable>)
<functioncall> = array_udiff_uassoc(<fuzzarray>, <fuzzarray>, <fuzzarray>, <fuzzcallable>, <fuzzcallable>)
<functioncall> = array_uintersect_assoc(<fuzzarray>, <fuzzarray>, <fuzzarray>, <fuzzcallable>)
<functioncall> = array_uintersect(<fuzzarray>, <fuzzarray>, <fuzzarray>, <fuzzcallable>)
<functioncall> = array_uintersect_uassoc(<fuzzarray>, <fuzzarray>, <fuzzarray>, <fuzzcallable>, <fuzzcallable>)
<functioncall> = array_unique(<fuzzarray>, <fuzzint>)
<functioncall> = array_unshift(<fuzzarrayreference>, <fuzzmixed>)
<functioncall> = array_values(<fuzzarray>)
<functioncall> = array_walk(<fuzzarrayreference>, <fuzzcallable>, <fuzzmixed>)
<functioncall> = array_walk_recursive(<fuzzarrayreference>, <fuzzcallable>, <fuzzmixed>)
<functioncall> = arsort(<fuzzarrayreference>, <fuzzint>)
<functioncall> = asin(<fuzzfloat>)
<functioncall> = asinh(<fuzzfloat>)
<functioncall> = asort(<fuzzarrayreference>, <fuzzint>)
<functioncall> = assert(<fuzzmixed>, <fuzzstring>)
<functioncall> = assert(<fuzzmixed>, <fuzzThrowable>)
<functioncall> = assert_options(<fuzzint>, <fuzzmixed>)
<functioncall> = atan2(<fuzzfloat>, <fuzzfloat>)
<functioncall> = atan(<fuzzfloat>)
<functioncall> = atanh(<fuzzfloat>)
<functioncall> = base64_decode(<fuzzstring>, <fuzzbool>)
<functioncall> = base64_encode(<fuzzstring>)
<functioncall> = base_convert(<fuzzstring>, <fuzzint>, <fuzzint>)
<functioncall> = basename(<fuzzstring>, <fuzzstring>)
<functioncall> = bin2hex(<fuzzstring>)
<functioncall> = bindec(<fuzzstring>)
<functioncall> = boolval(<fuzzmixed>)
<functioncall> = call_user_func_array(<fuzzcallable>, <fuzzarray>)
<functioncall> = call_user_func(<fuzzcallable>, <fuzzmixed>)
<functioncall> = ceil(<fuzzfloat>)
<functioncall> = chdir(<fuzzstring>)
<functioncall> = checkdate(<fuzzint>, <fuzzint>, <fuzzint>)
<functioncall> = checkdnsrr(<fuzzstring>, <fuzzstring>)
<functioncall> = chgrp(<fuzzstring>, <fuzzmixed>)
<functioncall> = chmod(<fuzzstring>, <fuzzint>)
<functioncall> = chown(<fuzzstring>, <fuzzmixed>)
<functioncall> = chr(<fuzzint>)
<functioncall> = chroot(<fuzzstring>)
<functioncall> = chunk_split(<fuzzstring>, <fuzzint>, <fuzzstring>)
<functioncall> = class_alias(<fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = class_exists(<fuzzstring>, <fuzzbool>)
<functioncall> = class_implements(<fuzzmixed>, <fuzzbool>)
<functioncall> = class_parents(<fuzzmixed>, <fuzzbool>)
<functioncall> = class_uses(<fuzzmixed>, <fuzzbool>)
<functioncall> = clearstatcache(<fuzzbool>, <fuzzstring>)
<functioncall> = cli_get_process_title()
<functioncall> = cli_set_process_title(<fuzzstring>)
<functioncall> = closedir(<fuzzresource>)
<functioncall> = closelog()
<functioncall> = compact(<fuzzmixed>, <fuzzmixed>)
<functioncall> = connection_aborted()
<functioncall> = connection_status()
<functioncall> = constant(<fuzzstring>)
<functioncall> = convert_cyr_string(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = convert_uudecode(<fuzzstring>)
<functioncall> = convert_uuencode(<fuzzstring>)
<functioncall> = copy(<fuzzstring>, <fuzzstring>, <fuzzresource>)
<functioncall> = cos(<fuzzfloat>)
<functioncall> = cosh(<fuzzfloat>)
<functioncall> = count()
<functioncall> = count_chars(<fuzzstring>, <fuzzint>)
<functioncall> = count(<fuzzmixed>, <fuzzint>)
<functioncall> = crc32(<fuzzstring>)
<functioncall> = create_function(<fuzzstring>, <fuzzstring>)
<functioncall> = crypt(<fuzzstring>, <fuzzstring>)
<functioncall> = ctype_alnum(<fuzzstring>)
<functioncall> = ctype_alpha(<fuzzstring>)
<functioncall> = ctype_cntrl(<fuzzstring>)
<functioncall> = ctype_digit(<fuzzstring>)
<functioncall> = ctype_graph(<fuzzstring>)
<functioncall> = ctype_lower(<fuzzstring>)
<functioncall> = ctype_print(<fuzzstring>)
<functioncall> = ctype_punct(<fuzzstring>)
<functioncall> = ctype_space(<fuzzstring>)
<functioncall> = ctype_upper(<fuzzstring>)
<functioncall> = ctype_xdigit(<fuzzstring>)
<functioncall> = curl_close(<fuzzresource>)
<functioncall> = curl_copy_handle(<fuzzresource>)
<functioncall> = curl_errno(<fuzzresource>)
<functioncall> = curl_error(<fuzzresource>)
<functioncall> = curl_escape(<fuzzresource>, <fuzzstring>)
<functioncall> = curl_exec(<fuzzresource>)
<functioncall> = curl_file_create(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = curl_getinfo(<fuzzresource>, <fuzzint>)
<functioncall> = curl_init(<fuzzstring>)
<functioncall> = curl_multi_add_handle(<fuzzresource>, <fuzzresource>)
<functioncall> = curl_multi_close(<fuzzresource>)
<functioncall> = curl_multi_errno(<fuzzresource>)
<functioncall> = curl_multi_exec(<fuzzresource>, <fuzzintreference>)
<functioncall> = curl_multi_getcontent(<fuzzresource>)
<functioncall> = curl_multi_info_read(<fuzzresource>, <fuzzintreference>)
<functioncall> = curl_multi_init()
<functioncall> = curl_multi_remove_handle(<fuzzresource>, <fuzzresource>)
<functioncall> = curl_multi_select(<fuzzresource>, <fuzzfloat>)
<functioncall> = curl_multi_setopt(<fuzzresource>, <fuzzint>, <fuzzmixed>)
<functioncall> = curl_multi_strerror(<fuzzint>)
<functioncall> = curl_pause(<fuzzresource>, <fuzzint>)
<functioncall> = curl_reset(<fuzzresource>)
<functioncall> = curl_setopt_array(<fuzzresource>, <fuzzarray>)
<functioncall> = curl_setopt(<fuzzresource>, <fuzzint>, <fuzzmixed>)
<functioncall> = curl_share_close(<fuzzresource>)
<functioncall> = curl_share_errno(<fuzzresource>)
<functioncall> = curl_share_init()
<functioncall> = curl_share_setopt(<fuzzresource>, <fuzzint>, <fuzzstring>)
<functioncall> = curl_share_strerror(<fuzzint>)
<functioncall> = curl_strerror(<fuzzint>)
<functioncall> = curl_unescape(<fuzzresource>, <fuzzstring>)
<functioncall> = curl_version(<fuzzint>)
<functioncall> = current(<fuzzarray>)
<functioncall> = date_default_timezone_get()
<functioncall> = date_default_timezone_set(<fuzzstring>)
<functioncall> = date(<fuzzstring>, <fuzzint>)
<functioncall> = date_parse_from_format(<fuzzstring>, <fuzzstring>)
<functioncall> = date_parse(<fuzzstring>)
<functioncall> = date_sun_info(<fuzzint>, <fuzzfloat>, <fuzzfloat>)
<functioncall> = date_sunrise(<fuzzint>, <fuzzint>, <fuzzfloat>, <fuzzfloat>, <fuzzfloat>, <fuzzfloat>)
<functioncall> = date_sunset(<fuzzint>, <fuzzint>, <fuzzfloat>, <fuzzfloat>, <fuzzfloat>, <fuzzfloat>)
<functioncall> = debug_backtrace(<fuzzint>, <fuzzint>)
<functioncall> = debug_print_backtrace(<fuzzint>, <fuzzint>)
<functioncall> = debug_zval_dump(<fuzzmixed>, <fuzzmixed>)
<functioncall> = decbin(<fuzzint>)
<functioncall> = dechex(<fuzzint>)
<functioncall> = decoct(<fuzzint>)
<functioncall> = defined(<fuzzstring>)
<functioncall> = define(<fuzzstring>, <fuzzmixed>, <fuzzbool>)
<functioncall> = deflate_add(<fuzzresource>, <fuzzstring>, <fuzzint>)
<functioncall> = deflate_init(<fuzzint>, <fuzzarray>)
<functioncall> = deg2rad(<fuzzfloat>)
<functioncall> = dir(<fuzzstring>, <fuzzresource>)
<functioncall> = dirname(<fuzzstring>, <fuzzint>)
<functioncall> = disk_free_space(<fuzzstring>)
<functioncall> = disk_total_space(<fuzzstring>)
<functioncall> = dl(<fuzzstring>)
<functioncall> = dns_get_record(<fuzzstring>, <fuzzint>, <fuzzarrayreference>, <fuzzarrayreference>, <fuzzbool>)
<functioncall> = dom_import_simplexml(<fuzzSimpleXMLElement>)
<functioncall> = each(<fuzzarrayreference>)
<functioncall> = end(<fuzzarrayreference>)
<functioncall> = error_clear_last()
<functioncall> = error_get_last()
<functioncall> = error_log(<fuzzstring>, <fuzzint>, <fuzzstring>, <fuzzstring>)
<functioncall> = error_reporting(<fuzzint>)
<functioncall> = escapeshellarg(<fuzzstring>)
<functioncall> = escapeshellcmd(<fuzzstring>)
<functioncall> = exec(<fuzzstring>, <fuzzarrayreference>, <fuzzintreference>)
<functioncall> = exp(<fuzzfloat>)
<functioncall> = explode(<fuzzstring>, <fuzzstring>, <fuzzint>)
<functioncall> = expm1(<fuzzfloat>)
<functioncall> = extension_loaded(<fuzzstring>)
<functioncall> = extract(<fuzzarrayreference>, <fuzzint>, <fuzzstring>)
<functioncall> = ezmlm_hash(<fuzzstring>)
<functioncall> = fclose(<fuzzresource>)
<functioncall> = feof(<fuzzresource>)
<functioncall> = fflush(<fuzzresource>)
<functioncall> = fgetc(<fuzzresource>)
<functioncall> = fgetcsv(<fuzzresource>, <fuzzint>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = fgets(<fuzzresource>, <fuzzint>)
<functioncall> = fgetss(<fuzzresource>, <fuzzint>, <fuzzstring>)
<functioncall> = fileatime(<fuzzstring>)
<functioncall> = filectime(<fuzzstring>)
<functioncall> = file_exists(<fuzzstring>)
<functioncall> = file(<fuzzstring>, <fuzzint>, <fuzzresource>)
<functioncall> = file_get_contents(<fuzzstring>, <fuzzbool>, <fuzzresource>, <fuzzint>, <fuzzint>)
<functioncall> = filegroup(<fuzzstring>)
<functioncall> = fileinode(<fuzzstring>)
<functioncall> = filemtime(<fuzzstring>)
<functioncall> = fileowner(<fuzzstring>)
<functioncall> = fileperms(<fuzzstring>)
<functioncall> = file_put_contents(<fuzzstring>, <fuzzmixed>, <fuzzint>, <fuzzresource>)
<functioncall> = filesize(<fuzzstring>)
<functioncall> = filetype(<fuzzstring>)
<functioncall> = filter_has_var(<fuzzint>, <fuzzstring>)
<functioncall> = filter_id(<fuzzstring>)
<functioncall> = filter_input_array(<fuzzint>, <fuzzmixed>, <fuzzbool>)
<functioncall> = filter_input(<fuzzint>, <fuzzstring>, <fuzzint>, <fuzzmixed>)
<functioncall> = filter_list()
<functioncall> = filter_var_array(<fuzzarray>, <fuzzmixed>, <fuzzbool>)
<functioncall> = filter_var(<fuzzmixed>, <fuzzint>, <fuzzmixed>)
<functioncall> = finfo_close(<fuzzresource>)
<functioncall> = finfo_open(<fuzzint>, <fuzzstring>)
<functioncall> = floatval(<fuzzmixed>)
<functioncall> = flock(<fuzzresource>, <fuzzint>, <fuzzintreference>)
<functioncall> = floor(<fuzzfloat>)
<functioncall> = flush()
<functioncall> = fmod(<fuzzfloat>, <fuzzfloat>)
<functioncall> = fnmatch(<fuzzstring>, <fuzzstring>, <fuzzint>)
<functioncall> = fopen(<fuzzstring>, <fuzzstring>, <fuzzbool>, <fuzzresource>)
<functioncall> = forward_static_call_array(<fuzzcallable>, <fuzzarray>)
<functioncall> = forward_static_call(<fuzzcallable>, <fuzzmixed>)
<functioncall> = fpassthru(<fuzzresource>)
<functioncall> = fprintf(<fuzzresource>, <fuzzstring>, <fuzzmixed>)
<functioncall> = fputcsv(<fuzzresource>, <fuzzarray>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = fread(<fuzzresource>, <fuzzint>)
<functioncall> = fscanf(<fuzzresource>, <fuzzstring>, <fuzzmixedreference>)
<functioncall> = fseek(<fuzzresource>, <fuzzint>, <fuzzint>)
<functioncall> = fsockopen(<fuzzstring>, <fuzzint>, <fuzzintreference>, <fuzzstringreference>, <fuzzfloat>)
<functioncall> = fstat(<fuzzresource>)
<functioncall> = ftell(<fuzzresource>)
<functioncall> = ftok(<fuzzstring>, <fuzzstring>)
<functioncall> = ftruncate(<fuzzresource>, <fuzzint>)
<functioncall> = func_get_arg(<fuzzint>)
<functioncall> = func_get_args()
<functioncall> = func_num_args()
<functioncall> = function_exists(<fuzzstring>)
<functioncall> = fwrite(<fuzzresource>, <fuzzstring>, <fuzzint>)
<functioncall> = gc_collect_cycles()
<functioncall> = gc_disable()
<functioncall> = gc_enable()
<functioncall> = gc_enabled()
<functioncall> = gc_mem_caches()
<functioncall> = gc_status()
<functioncall> = get_browser(<fuzzstring>, <fuzzbool>)
<functioncall> = get_called_class()
<functioncall> = get_cfg_var(<fuzzstring>)
<functioncall> = get_class(<fuzzobject>)
<functioncall> = get_class_methods(<fuzzmixed>)
<functioncall> = get_class_vars(<fuzzstring>)
<functioncall> = get_current_user()
<functioncall> = getcwd()
<functioncall> = getdate(<fuzzint>)
<functioncall> = get_declared_classes()
<functioncall> = get_declared_interfaces()
<functioncall> = get_declared_traits()
<functioncall> = get_defined_constants(<fuzzbool>)
<functioncall> = get_defined_functions(<fuzzbool>)
<functioncall> = get_defined_vars()
<functioncall> = getenv()
<functioncall> = getenv(<fuzzstring>, <fuzzbool>)
<functioncall> = get_extension_funcs(<fuzzstring>)
<functioncall> = get_headers(<fuzzstring>, <fuzzint>, <fuzzresource>)
<functioncall> = gethostbyaddr(<fuzzstring>)
<functioncall> = gethostbyname(<fuzzstring>)
<functioncall> = gethostbynamel(<fuzzstring>)
<functioncall> = gethostname()
<functioncall> = get_html_translation_table(<fuzzint>, <fuzzint>, <fuzzstring>)
<functioncall> = getimagesizefromstring(<fuzzstring>, <fuzzarrayreference>)
<functioncall> = getimagesize(<fuzzstring>, <fuzzarrayreference>)
<functioncall> = get_included_files()
<functioncall> = get_include_path()
<functioncall> = getlastmod()
<functioncall> = get_loaded_extensions(<fuzzbool>)
<functioncall> = get_magic_quotes_gpc()
<functioncall> = get_magic_quotes_runtime()
<functioncall> = get_meta_tags(<fuzzstring>, <fuzzbool>)
<functioncall> = getmxrr(<fuzzstring>, <fuzzarrayreference>, <fuzzarrayreference>)
<functioncall> = getmygid()
<functioncall> = getmyinode()
<functioncall> = getmypid()
<functioncall> = getmyuid()
<functioncall> = get_object_vars(<fuzzobject>)
<functioncall> = getopt(<fuzzstring>, <fuzzarray>, <fuzzintreference>)
<functioncall> = get_parent_class(<fuzzmixed>)
<functioncall> = getprotobyname(<fuzzstring>)
<functioncall> = getprotobynumber(<fuzzint>)
<functioncall> = getrandmax()
<functioncall> = get_resources(<fuzzstring>)
<functioncall> = get_resource_type(<fuzzresource>)
<functioncall> = getrusage(<fuzzint>)
<functioncall> = getservbyname(<fuzzstring>, <fuzzstring>)
<functioncall> = getservbyport(<fuzzint>, <fuzzstring>)
<functioncall> = gettimeofday(<fuzzbool>)
<functioncall> = getType()
<functioncall> = gettype(<fuzzmixed>)
<functioncall> = glob(<fuzzstring>, <fuzzint>)
<functioncall> = gmdate(<fuzzstring>, <fuzzint>)
<functioncall> = gmmktime(<fuzzint>, <fuzzint>, <fuzzint>, <fuzzint>, <fuzzint>, <fuzzint>, <fuzzint>)
<functioncall> = gmstrftime(<fuzzstring>, <fuzzint>)
<functioncall> = gzclose(<fuzzresource>)
<functioncall> = gzcompress(<fuzzstring>, <fuzzint>, <fuzzint>)
<functioncall> = gzdecode(<fuzzstring>, <fuzzint>)
<functioncall> = gzdeflate(<fuzzstring>, <fuzzint>, <fuzzint>)
<functioncall> = gzencode(<fuzzstring>, <fuzzint>, <fuzzint>)
<functioncall> = gzeof(<fuzzresource>)
<functioncall> = gzfile(<fuzzstring>, <fuzzint>)
<functioncall> = gzgetc(<fuzzresource>)
<functioncall> = gzgets(<fuzzresource>, <fuzzint>)
<functioncall> = gzgetss(<fuzzresource>, <fuzzint>, <fuzzstring>)
<functioncall> = gzinflate(<fuzzstring>, <fuzzint>)
<functioncall> = gzopen(<fuzzstring>, <fuzzstring>, <fuzzint>)
<functioncall> = gzpassthru(<fuzzresource>)
<functioncall> = gzread(<fuzzresource>, <fuzzint>)
<functioncall> = gzrewind(<fuzzresource>)
<functioncall> = gzseek(<fuzzresource>, <fuzzint>, <fuzzint>)
<functioncall> = gztell(<fuzzresource>)
<functioncall> = gzuncompress(<fuzzstring>, <fuzzint>)
<functioncall> = gzwrite(<fuzzresource>, <fuzzstring>, <fuzzint>)
<functioncall> = hash_algos()
<functioncall> = hash_copy(<fuzzHashContext>)
<functioncall> = hash_equals(<fuzzstring>, <fuzzstring>)
<functioncall> = hash_file(<fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = hash_final(<fuzzHashContext>, <fuzzbool>)
<functioncall> = hash(<fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = hash_hkdf(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzstring>, <fuzzstring>)
<functioncall> = hash_hmac_algos()
<functioncall> = hash_hmac_file(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = hash_hmac(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = hash_init(<fuzzstring>, <fuzzint>, <fuzzstring>)
<functioncall> = hash_pbkdf2(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzint>, <fuzzbool>)
<functioncall> = hash_update_file(<fuzzHashContext>, <fuzzstring>, <fuzzresource>)
<functioncall> = hash_update(<fuzzHashContext>, <fuzzstring>)
<functioncall> = hash_update_stream(<fuzzHashContext>, <fuzzresource>, <fuzzint>)
<functioncall> = header(<fuzzstring>, <fuzzbool>, <fuzzint>)
<functioncall> = header_register_callback(<fuzzcallable>)
<functioncall> = header_remove(<fuzzstring>)
<functioncall> = headers_list()
<functioncall> = headers_sent(<fuzzstringreference>, <fuzzintreference>)
<functioncall> = hebrevc(<fuzzstring>, <fuzzint>)
<functioncall> = hebrev(<fuzzstring>, <fuzzint>)
<functioncall> = hex2bin(<fuzzstring>)
<functioncall> = hexdec(<fuzzstring>)
<functioncall> = highlight_file(<fuzzstring>, <fuzzbool>)
<functioncall> = highlight_string(<fuzzstring>, <fuzzbool>)
<functioncall> = hrtime(<fuzzbool>)
<functioncall> = htmlentities(<fuzzstring>, <fuzzint>, <fuzzstring>, <fuzzbool>)
<functioncall> = html_entity_decode(<fuzzstring>, <fuzzint>, <fuzzstring>)
<functioncall> = htmlspecialchars_decode(<fuzzstring>, <fuzzint>)
<functioncall> = htmlspecialchars(<fuzzstring>, <fuzzint>, <fuzzstring>, <fuzzbool>)
<functioncall> = http_build_query(<fuzzmixed>, <fuzzstring>, <fuzzstring>, <fuzzint>)
<functioncall> = http_response_code(<fuzzint>)
<functioncall> = hypot(<fuzzfloat>, <fuzzfloat>)
<functioncall> = iconv(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = iconv_get_encoding(<fuzzstring>)
<functioncall> = iconv_mime_decode(<fuzzstring>, <fuzzint>, <fuzzstring>)
<functioncall> = iconv_mime_decode_headers(<fuzzstring>, <fuzzint>, <fuzzstring>)
<functioncall> = iconv_mime_encode(<fuzzstring>, <fuzzstring>, <fuzzarray>)
<functioncall> = iconv_set_encoding(<fuzzstring>, <fuzzstring>)
<functioncall> = iconv_strlen(<fuzzstring>, <fuzzstring>)
<functioncall> = iconv_strpos(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzstring>)
<functioncall> = iconv_strrpos(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = iconv_substr(<fuzzstring>, <fuzzint>, <fuzzint>, <fuzzstring>)
<functioncall> = idate(<fuzzstring>, <fuzzint>)
<functioncall> = ignore_user_abort(<fuzzbool>)
<functioncall> = image_type_to_extension(<fuzzint>, <fuzzbool>)
<functioncall> = image_type_to_mime_type(<fuzzint>)
<functioncall> = implode(<fuzzarray>)
<functioncall> = implode(<fuzzstring>, <fuzzarray>)
<functioncall> = in_array(<fuzzmixed>, <fuzzarray>, <fuzzbool>)
<functioncall> = inet_ntop(<fuzzstring>)
<functioncall> = inet_pton(<fuzzstring>)
<functioncall> = inflate_add(<fuzzresource>, <fuzzstring>, <fuzzint>)
<functioncall> = inflate_get_read_len(<fuzzresource>)
<functioncall> = inflate_get_status(<fuzzresource>)
<functioncall> = inflate_init(<fuzzint>, <fuzzarray>)
<functioncall> = ini_get_all(<fuzzstring>, <fuzzbool>)
<functioncall> = ini_get(<fuzzstring>)
<functioncall> = ini_restore(<fuzzstring>)
<functioncall> = ini_set(<fuzzstring>, <fuzzstring>)
<functioncall> = intdiv(<fuzzint>, <fuzzint>)
<functioncall> = interface_exists(<fuzzstring>, <fuzzbool>)
<functioncall> = intval(<fuzzmixed>, <fuzzint>)
<functioncall> = ip2long(<fuzzstring>)
<functioncall> = iptcembed(<fuzzstring>, <fuzzstring>, <fuzzint>)
<functioncall> = iptcparse(<fuzzstring>)
<functioncall> = is_a(<fuzzmixed>, <fuzzstring>, <fuzzbool>)
<functioncall> = is_array(<fuzzmixed>)
<functioncall> = is_bool(<fuzzmixed>)
<functioncall> = is_callable(<fuzzmixed>, <fuzzbool>, <fuzzstringreference>)
<functioncall> = is_countable(<fuzzmixed>)
<functioncall> = is_dir(<fuzzstring>)
<functioncall> = is_executable(<fuzzstring>)
<functioncall> = is_file(<fuzzstring>)
<functioncall> = is_finite(<fuzzfloat>)
<functioncall> = is_float(<fuzzmixed>)
<functioncall> = is_infinite(<fuzzfloat>)
<functioncall> = is_int(<fuzzmixed>)
<functioncall> = is_iterable(<fuzzmixed>)
<functioncall> = is_link(<fuzzstring>)
<functioncall> = is_nan(<fuzzfloat>)
<functioncall> = is_null(<fuzzmixed>)
<functioncall> = is_numeric(<fuzzmixed>)
<functioncall> = is_object(<fuzzmixed>)
<functioncall> = is_readable(<fuzzstring>)
<functioncall> = is_resource(<fuzzmixed>)
<functioncall> = is_scalar(<fuzzmixed>)
<functioncall> = is_string(<fuzzmixed>)
<functioncall> = is_subclass_of(<fuzzmixed>, <fuzzstring>, <fuzzbool>)
<functioncall> = is_uploaded_file(<fuzzstring>)
<functioncall> = is_writable(<fuzzstring>)
<functioncall> = iterator_apply(<fuzzTraversable>, <fuzzcallable>, <fuzzarray>)
<functioncall> = iterator_count(<fuzzTraversable>)
<functioncall> = iterator_to_array(<fuzzTraversable>, <fuzzbool>)
<functioncall> = json_decode(<fuzzstring>, <fuzzbool>, <fuzzint>, <fuzzint>)
<functioncall> = json_encode(<fuzzmixed>, <fuzzint>, <fuzzint>)
<functioncall> = json_last_error()
<functioncall> = json_last_error_msg()
<functioncall> = key(<fuzzarray>)
<functioncall> = krsort(<fuzzarrayreference>, <fuzzint>)
<functioncall> = ksort(<fuzzarrayreference>, <fuzzint>)
<functioncall> = lcfirst(<fuzzstring>)
<functioncall> = lcg_value()
<functioncall> = lchgrp(<fuzzstring>, <fuzzmixed>)
<functioncall> = lchown(<fuzzstring>, <fuzzmixed>)
<functioncall> = levenshtein(<fuzzstring>, <fuzzstring>)
<functioncall> = levenshtein(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzint>, <fuzzint>)
<functioncall> = libxml_clear_errors()
<functioncall> = libxml_disable_entity_loader(<fuzzbool>)
<functioncall> = libxml_get_errors()
<functioncall> = libxml_get_last_error()
<functioncall> = libxml_set_external_entity_loader(<fuzzcallable>)
<functioncall> = libxml_set_streams_context(<fuzzresource>)
<functioncall> = libxml_use_internal_errors(<fuzzbool>)
<functioncall> = link(<fuzzstring>, <fuzzstring>)
<functioncall> = linkinfo(<fuzzstring>)
<functioncall> = localeconv()
<functioncall> = localtime(<fuzzint>, <fuzzbool>)
<functioncall> = log10(<fuzzfloat>)
<functioncall> = log1p(<fuzzfloat>)
<functioncall> = log(<fuzzfloat>, <fuzzfloat>)
<functioncall> = long2ip(<fuzzint>)
<functioncall> = lstat(<fuzzstring>)
<functioncall> = ltrim(<fuzzstring>, <fuzzstring>)
<functioncall> = mail(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzstring>)
<functioncall> = max(<fuzzarray>)
<functioncall> = max(<fuzzmixed>, <fuzzmixed>)
<functioncall> = mb_check_encoding(<fuzzmixed>, <fuzzstring>)
<functioncall> = mb_chr(<fuzzint>, <fuzzstring>)
<functioncall> = mb_convert_case(<fuzzstring>, <fuzzint>, <fuzzstring>)
<functioncall> = mb_convert_encoding(<fuzzmixed>, <fuzzstring>, <fuzzmixed>)
<functioncall> = mb_convert_kana(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = mb_convert_variables(<fuzzstring>, <fuzzmixed>, <fuzzmixedreference>, <fuzzmixedreference>)
<functioncall> = mb_decode_mimeheader(<fuzzstring>)
<functioncall> = mb_decode_numericentity(<fuzzstring>, <fuzzarray>, <fuzzstring>, <fuzzbool>)
<functioncall> = mb_detect_encoding(<fuzzstring>, <fuzzmixed>, <fuzzbool>)
<functioncall> = mb_detect_order(<fuzzmixed>)
<functioncall> = mb_encode_mimeheader(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzint>)
<functioncall> = mb_encode_numericentity(<fuzzstring>, <fuzzarray>, <fuzzstring>, <fuzzbool>)
<functioncall> = mb_encoding_aliases(<fuzzstring>)
<functioncall> = mb_ereg(<fuzzstring>, <fuzzstring>, <fuzzarrayreference>)
<functioncall> = mb_eregi(<fuzzstring>, <fuzzstring>, <fuzzarrayreference>)
<functioncall> = mb_eregi_replace(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = mb_ereg_match(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = mb_ereg_replace_callback(<fuzzstring>, <fuzzcallable>, <fuzzstring>, <fuzzstring>)
<functioncall> = mb_ereg_replace(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = mb_ereg_search(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_ereg_search_getpos()
<functioncall> = mb_ereg_search_getregs()
<functioncall> = mb_ereg_search_init(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = mb_ereg_search_pos(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_ereg_search_regs(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_ereg_search_setpos(<fuzzint>)
<functioncall> = mb_get_info(<fuzzstring>)
<functioncall> = mb_http_input(<fuzzstring>)
<functioncall> = mb_http_output(<fuzzstring>)
<functioncall> = mb_internal_encoding(<fuzzstring>)
<functioncall> = mb_language()
<functioncall> = mb_language(<fuzzstring>)
<functioncall> = mb_list_encodings()
<functioncall> = mb_ord(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_output_handler(<fuzzstring>, <fuzzint>)
<functioncall> = mb_parse_str(<fuzzstring>, <fuzzarrayreference>)
<functioncall> = mb_preferred_mime_name(<fuzzstring>)
<functioncall> = mb_regex_encoding(<fuzzstring>)
<functioncall> = mb_regex_set_options(<fuzzstring>)
<functioncall> = mb_scrub(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_send_mail(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzstring>)
<functioncall> = mb_split(<fuzzstring>, <fuzzstring>, <fuzzint>)
<functioncall> = mb_strcut(<fuzzstring>, <fuzzint>, <fuzzint>, <fuzzstring>)
<functioncall> = mb_strimwidth(<fuzzstring>, <fuzzint>, <fuzzint>, <fuzzstring>, <fuzzstring>)
<functioncall> = mb_stripos(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzstring>)
<functioncall> = mb_stristr(<fuzzstring>, <fuzzstring>, <fuzzbool>, <fuzzstring>)
<functioncall> = mb_strlen(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_strpos(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzstring>)
<functioncall> = mb_strrchr(<fuzzstring>, <fuzzstring>, <fuzzbool>, <fuzzstring>)
<functioncall> = mb_strrichr(<fuzzstring>, <fuzzstring>, <fuzzbool>, <fuzzstring>)
<functioncall> = mb_strripos(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzstring>)
<functioncall> = mb_strrpos(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzstring>)
<functioncall> = mb_strstr(<fuzzstring>, <fuzzstring>, <fuzzbool>, <fuzzstring>)
<functioncall> = mb_strtolower(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_strtoupper(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_strwidth(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_substitute_character(<fuzzmixed>)
<functioncall> = mb_substr_count(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = mb_substr(<fuzzstring>, <fuzzint>, <fuzzint>, <fuzzstring>)
<functioncall> = md5_file(<fuzzstring>, <fuzzbool>)
<functioncall> = md5(<fuzzstring>, <fuzzbool>)
<functioncall> = memory_get_peak_usage(<fuzzbool>)
<functioncall> = memory_get_usage(<fuzzbool>)
<functioncall> = metaphone(<fuzzstring>, <fuzzint>)
<functioncall> = method_exists(<fuzzmixed>, <fuzzstring>)
<functioncall> = mhash_count()
<functioncall> = mhash(<fuzzint>, <fuzzstring>, <fuzzstring>)
<functioncall> = mhash_get_block_size(<fuzzint>)
<functioncall> = mhash_get_hash_name(<fuzzint>)
<functioncall> = mhash_keygen_s2k(<fuzzint>, <fuzzstring>, <fuzzstring>, <fuzzint>)
<functioncall> = microtime(<fuzzbool>)
<functioncall> = mime_content_type(<fuzzstring>)
<functioncall> = min(<fuzzarray>)
<functioncall> = min(<fuzzmixed>, <fuzzmixed>)
<functioncall> = mkdir(<fuzzstring>, <fuzzint>, <fuzzbool>, <fuzzresource>)
<functioncall> = mktime(<fuzzint>, <fuzzint>, <fuzzint>, <fuzzint>, <fuzzint>, <fuzzint>, <fuzzint>)
<functioncall> = money_format(<fuzzstring>, <fuzzfloat>)
<functioncall> = move_uploaded_file(<fuzzstring>, <fuzzstring>)
<functioncall> = mt_getrandmax()
<functioncall> = mt_rand()
<functioncall> = mt_rand(<fuzzint>, <fuzzint>)
<functioncall> = mt_srand(<fuzzint>, <fuzzint>)
<functioncall> = natcasesort(<fuzzarrayreference>)
<functioncall> = natsort(<fuzzarrayreference>)
<functioncall> = next(<fuzzarrayreference>)
<functioncall> = nl2br(<fuzzstring>, <fuzzbool>)
<functioncall> = nl_langinfo(<fuzzint>)
<functioncall> = number_format(<fuzzfloat>, <fuzzint>)
<functioncall> = number_format(<fuzzfloat>, <fuzzint>, <fuzzstring>, <fuzzstring>)
<functioncall> = ob_clean()
<functioncall> = ob_end_clean()
<functioncall> = ob_end_flush()
<functioncall> = ob_flush()
<functioncall> = ob_get_clean()
<functioncall> = ob_get_contents()
<functioncall> = ob_get_flush()
<functioncall> = ob_get_length()
<functioncall> = ob_get_level()
<functioncall> = ob_get_status()
<functioncall> = ob_gzhandler(<fuzzstring>, <fuzzint>)
<functioncall> = ob_implicit_flush(<fuzzint>)
<functioncall> = ob_list_handlers()
<functioncall> = ob_start(<fuzzcallable>, <fuzzint>, <fuzzint>)
<functioncall> = octdec(<fuzzstring>)
<functioncall> = opendir(<fuzzstring>, <fuzzresource>)
<functioncall> = openlog(<fuzzstring>, <fuzzint>, <fuzzint>)
<functioncall> = openssl_cipher_iv_length(<fuzzstring>)
<functioncall> = openssl_csr_export(<fuzzmixed>, <fuzzstringreference>, <fuzzbool>)
<functioncall> = openssl_csr_export_to_file(<fuzzmixed>, <fuzzstring>, <fuzzbool>)
<functioncall> = openssl_csr_get_public_key(<fuzzmixed>, <fuzzbool>)
<functioncall> = openssl_csr_get_subject(<fuzzmixed>, <fuzzbool>)
<functioncall> = openssl_csr_new(<fuzzarray>, <fuzzresourcereference>, <fuzzarray>, <fuzzarray>)
<functioncall> = openssl_csr_sign(<fuzzmixed>, <fuzzmixed>, <fuzzmixed>, <fuzzint>, <fuzzarray>, <fuzzint>)
<functioncall> = openssl_decrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = openssl_dh_compute_key(<fuzzstring>, <fuzzresource>)
<functioncall> = openssl_digest(<fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = openssl_encrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzstring>, <fuzzstringreference>, <fuzzstring>, <fuzzint>)
<functioncall> = openssl_error_string()
<functioncall> = openssl_free_key(<fuzzresource>)
<functioncall> = openssl_get_cert_locations()
<functioncall> = openssl_get_cipher_methods(<fuzzbool>)
<functioncall> = openssl_get_curve_names()
<functioncall> = openssl_get_md_methods(<fuzzbool>)
<functioncall> = openssl_open(<fuzzstring>, <fuzzstringreference>, <fuzzstring>, <fuzzmixed>, <fuzzstring>, <fuzzstring>)
<functioncall> = openssl_pbkdf2(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzint>, <fuzzstring>)
<functioncall> = openssl_pkcs12_export(<fuzzmixed>, <fuzzstringreference>, <fuzzmixed>, <fuzzstring>, <fuzzarray>)
<functioncall> = openssl_pkcs12_export_to_file(<fuzzmixed>, <fuzzstring>, <fuzzmixed>, <fuzzstring>, <fuzzarray>)
<functioncall> = openssl_pkcs12_read(<fuzzstring>, <fuzzarrayreference>, <fuzzstring>)
<functioncall> = openssl_pkcs7_decrypt(<fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzmixed>)
<functioncall> = openssl_pkcs7_encrypt(<fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzarray>, <fuzzint>, <fuzzint>)
<functioncall> = openssl_pkcs7_read(<fuzzstring>, <fuzzarrayreference>)
<functioncall> = openssl_pkcs7_sign(<fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzmixed>, <fuzzarray>, <fuzzint>, <fuzzstring>)
<functioncall> = openssl_pkcs7_verify(<fuzzstring>, <fuzzint>, <fuzzstring>, <fuzzarray>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = openssl_pkey_export(<fuzzmixed>, <fuzzstringreference>, <fuzzstring>, <fuzzarray>)
<functioncall> = openssl_pkey_export_to_file(<fuzzmixed>, <fuzzstring>, <fuzzstring>, <fuzzarray>)
<functioncall> = openssl_pkey_free(<fuzzresource>)
<functioncall> = openssl_pkey_get_details(<fuzzresource>)
<functioncall> = openssl_pkey_get_private(<fuzzmixed>, <fuzzstring>)
<functioncall> = openssl_pkey_get_public(<fuzzmixed>)
<functioncall> = openssl_pkey_new(<fuzzarray>)
<functioncall> = openssl_private_decrypt(<fuzzstring>, <fuzzstringreference>, <fuzzmixed>, <fuzzint>)
<functioncall> = openssl_private_encrypt(<fuzzstring>, <fuzzstringreference>, <fuzzmixed>, <fuzzint>)
<functioncall> = openssl_public_decrypt(<fuzzstring>, <fuzzstringreference>, <fuzzmixed>, <fuzzint>)
<functioncall> = openssl_public_encrypt(<fuzzstring>, <fuzzstringreference>, <fuzzmixed>, <fuzzint>)
<functioncall> = openssl_random_pseudo_bytes(<fuzzint>, <fuzzboolreference>)
<functioncall> = openssl_seal(<fuzzstring>, <fuzzstringreference>, <fuzzarrayreference>, <fuzzarray>, <fuzzstring>, <fuzzstringreference>)
<functioncall> = openssl_sign(<fuzzstring>, <fuzzstringreference>, <fuzzmixed>, <fuzzmixed>)
<functioncall> = openssl_spki_export_challenge(<fuzzstringreference>)
<functioncall> = openssl_spki_export(<fuzzstringreference>)
<functioncall> = openssl_spki_new(<fuzzresourcereference>, <fuzzstringreference>, <fuzzint>)
<functioncall> = openssl_spki_verify(<fuzzstringreference>)
<functioncall> = openssl_verify(<fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzmixed>)
<functioncall> = openssl_x509_check_private_key(<fuzzmixed>, <fuzzmixed>)
<functioncall> = openssl_x509_checkpurpose(<fuzzmixed>, <fuzzint>, <fuzzarray>, <fuzzstring>)
<functioncall> = openssl_x509_export(<fuzzmixed>, <fuzzstringreference>, <fuzzbool>)
<functioncall> = openssl_x509_export_to_file(<fuzzmixed>, <fuzzstring>, <fuzzbool>)
<functioncall> = openssl_x509_fingerprint(<fuzzmixed>, <fuzzstring>, <fuzzbool>)
<functioncall> = openssl_x509_free(<fuzzresource>)
<functioncall> = openssl_x509_parse(<fuzzmixed>, <fuzzbool>)
<functioncall> = openssl_x509_read(<fuzzmixed>)
<functioncall> = ord(<fuzzstring>)
<functioncall> = output_add_rewrite_var(<fuzzstring>, <fuzzstring>)
<functioncall> = output_reset_rewrite_vars()
<functioncall> = pack(<fuzzstring>, <fuzzmixed>)
<functioncall> = parse_ini_file(<fuzzstring>, <fuzzbool>, <fuzzint>)
<functioncall> = parse_ini_string(<fuzzstring>, <fuzzbool>, <fuzzint>)
<functioncall> = parse_str(<fuzzstring>, <fuzzarrayreference>)
<functioncall> = parse_url(<fuzzstring>, <fuzzint>)
<functioncall> = passthru(<fuzzstring>, <fuzzintreference>)
<functioncall> = password_get_info(<fuzzstring>)
<functioncall> = password_hash(<fuzzstring>, <fuzzint>, <fuzzarray>)
<functioncall> = password_needs_rehash(<fuzzstring>, <fuzzint>, <fuzzarray>)
<functioncall> = password_verify(<fuzzstring>, <fuzzstring>)
<functioncall> = pathinfo(<fuzzstring>, <fuzzint>)
<functioncall> = pclose(<fuzzresource>)
<functioncall> = pcntl_alarm(<fuzzint>)
<functioncall> = pcntl_async_signals(<fuzzbool>)
<functioncall> = pcntl_exec(<fuzzstring>, <fuzzarray>, <fuzzarray>)
<functioncall> = pcntl_fork()
<functioncall> = pcntl_get_last_error()
<functioncall> = pcntl_getpriority(<fuzzint>, <fuzzint>)
<functioncall> = pcntl_setpriority(<fuzzint>, <fuzzint>, <fuzzint>)
<functioncall> = pcntl_signal_dispatch()
<functioncall> = pcntl_signal(<fuzzint>, <fuzzcallable|int>, <fuzzbool>)
<functioncall> = pcntl_signal_get_handler(<fuzzint>)
<functioncall> = pcntl_sigprocmask(<fuzzint>, <fuzzarray>, <fuzzarrayreference>)
<functioncall> = pcntl_strerror(<fuzzint>)
<functioncall> = pcntl_wexitstatus(<fuzzint>)
<functioncall> = pcntl_wifexited(<fuzzint>)
<functioncall> = pcntl_wifsignaled(<fuzzint>)
<functioncall> = pcntl_wifstopped(<fuzzint>)
<functioncall> = pcntl_wstopsig(<fuzzint>)
<functioncall> = pcntl_wtermsig(<fuzzint>)
<functioncall> = pdo_drivers()
<functioncall> = pfsockopen(<fuzzstring>, <fuzzint>, <fuzzintreference>, <fuzzstringreference>, <fuzzfloat>)
<functioncall> = phpcredits(<fuzzint>)
<functioncall> = phpinfo(<fuzzint>)
<functioncall> = php_ini_loaded_file()
<functioncall> = php_ini_scanned_files()
<functioncall> = php_sapi_name()
<functioncall> = php_strip_whitespace(<fuzzstring>)
<functioncall> = php_uname(<fuzzstring>)
<functioncall> = phpversion(<fuzzstring>)
<functioncall> = pi()
<functioncall> = popen(<fuzzstring>, <fuzzstring>)
<functioncall> = posix_access(<fuzzstring>, <fuzzint>)
<functioncall> = posix_ctermid()
<functioncall> = posix_getcwd()
<functioncall> = posix_getegid()
<functioncall> = posix_geteuid()
<functioncall> = posix_getgid()
<functioncall> = posix_getgrgid(<fuzzint>)
<functioncall> = posix_getgrnam(<fuzzstring>)
<functioncall> = posix_getgroups()
<functioncall> = posix_get_last_error()
<functioncall> = posix_getlogin()
<functioncall> = posix_getpgid(<fuzzint>)
<functioncall> = posix_getpgrp()
<functioncall> = posix_getpid()
<functioncall> = posix_getppid()
<functioncall> = posix_getpwnam(<fuzzstring>)
<functioncall> = posix_getpwuid(<fuzzint>)
<functioncall> = posix_getrlimit()
<functioncall> = posix_getsid(<fuzzint>)
<functioncall> = posix_getuid()
<functioncall> = posix_initgroups(<fuzzstring>, <fuzzint>)
<functioncall> = posix_isatty(<fuzzmixed>)
<functioncall> = posix_mkfifo(<fuzzstring>, <fuzzint>)
<functioncall> = posix_mknod(<fuzzstring>, <fuzzint>, <fuzzint>, <fuzzint>)
<functioncall> = posix_setegid(<fuzzint>)
<functioncall> = posix_seteuid(<fuzzint>)
<functioncall> = posix_setgid(<fuzzint>)
<functioncall> = posix_setpgid(<fuzzint>, <fuzzint>)
<functioncall> = posix_setsid()
<functioncall> = posix_setuid(<fuzzint>)
<functioncall> = posix_strerror(<fuzzint>)
<functioncall> = posix_times()
<functioncall> = posix_ttyname(<fuzzmixed>)
<functioncall> = posix_uname()
<functioncall> = pow(<fuzznumber>, <fuzznumber>)
<functioncall> = preg_filter(<fuzzmixed>, <fuzzmixed>, <fuzzmixed>, <fuzzint>, <fuzzintreference>)
<functioncall> = preg_grep(<fuzzstring>, <fuzzarray>, <fuzzint>)
<functioncall> = preg_last_error()
<functioncall> = preg_match_all(<fuzzstring>, <fuzzstring>, <fuzzarrayreference>, <fuzzint>, <fuzzint>)
<functioncall> = preg_match(<fuzzstring>, <fuzzstring>, <fuzzarrayreference>, <fuzzint>, <fuzzint>)
<functioncall> = preg_quote(<fuzzstring>, <fuzzstring>)
<functioncall> = preg_replace_callback_array(<fuzzarray>, <fuzzmixed>, <fuzzint>, <fuzzintreference>)
<functioncall> = preg_replace_callback(<fuzzmixed>, <fuzzcallable>, <fuzzmixed>, <fuzzint>, <fuzzintreference>)
<functioncall> = preg_replace(<fuzzmixed>, <fuzzmixed>, <fuzzmixed>, <fuzzint>, <fuzzintreference>)
<functioncall> = preg_split(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzint>)
<functioncall> = prev(<fuzzarrayreference>)
<functioncall> = printf(<fuzzstring>, <fuzzmixed>)
<functioncall> = print_r(<fuzzmixed>, <fuzzbool>)
<functioncall> = proc_close(<fuzzresource>)
<functioncall> = proc_get_status(<fuzzresource>)
<functioncall> = proc_nice(<fuzzint>)
<functioncall> = proc_open(<fuzzstring>, <fuzzarray>, <fuzzarrayreference>, <fuzzstring>, <fuzzarray>, <fuzzarray>)
<functioncall> = proc_terminate(<fuzzresource>, <fuzzint>)
<functioncall> = property_exists(<fuzzmixed>, <fuzzstring>)
<functioncall> = putenv(<fuzzstring>)
<functioncall> = quoted_printable_decode(<fuzzstring>)
<functioncall> = quoted_printable_encode(<fuzzstring>)
<functioncall> = quotemeta(<fuzzstring>)
<functioncall> = rad2deg(<fuzzfloat>)
<functioncall> = rand()
<functioncall> = rand(<fuzzint>, <fuzzint>)
<functioncall> = random_bytes(<fuzzint>)
<functioncall> = random_int(<fuzzint>, <fuzzint>)
<functioncall> = range(<fuzzmixed>, <fuzzmixed>, <fuzznumber>)
<functioncall> = rawurldecode(<fuzzstring>)
<functioncall> = rawurlencode(<fuzzstring>)
<functioncall> = readdir(<fuzzresource>)
<functioncall> = readfile(<fuzzstring>, <fuzzbool>, <fuzzresource>)
<functioncall> = readgzfile(<fuzzstring>, <fuzzint>)
<functioncall> = readline_add_history(<fuzzstring>)
<functioncall> = readline_callback_handler_remove()
<functioncall> = readline_callback_read_char()
<functioncall> = readline_clear_history()
<functioncall> = readline_completion_function(<fuzzcallable>)
<functioncall> = readline_info(<fuzzstring>, <fuzzstring>)
<functioncall> = readline_list_history()
<functioncall> = readline_on_new_line()
<functioncall> = readline_read_history(<fuzzstring>)
<functioncall> = readline_redisplay()
<functioncall> = readline_write_history(<fuzzstring>)
<functioncall> = readlink(<fuzzstring>)
<functioncall> = realpath_cache_get()
<functioncall> = realpath_cache_size()
<functioncall> = realpath(<fuzzstring>)
<functioncall> = register_shutdown_function(<fuzzcallable>, <fuzzmixed>)
<functioncall> = register_tick_function(<fuzzcallable>, <fuzzmixed>)
<functioncall> = rename(<fuzzstring>, <fuzzstring>, <fuzzresource>)
<functioncall> = reset(<fuzzarrayreference>)
<functioncall> = restore_error_handler()
<functioncall> = restore_exception_handler()
<functioncall> = restore_include_path()
<functioncall> = rewinddir(<fuzzresource>)
<functioncall> = rewind(<fuzzresource>)
<functioncall> = rmdir(<fuzzstring>, <fuzzresource>)
<functioncall> = round(<fuzzfloat>, <fuzzint>, <fuzzint>)
<functioncall> = rsort(<fuzzarrayreference>, <fuzzint>)
<functioncall> = rtrim(<fuzzstring>, <fuzzstring>)
<functioncall> = scandir(<fuzzstring>, <fuzzint>, <fuzzresource>)
<functioncall> = serialize(<fuzzmixed>)
<functioncall> = session_abort()
<functioncall> = session_cache_expire(<fuzzstring>)
<functioncall> = session_cache_limiter(<fuzzstring>)
<functioncall> = session_create_id(<fuzzstring>)
<functioncall> = session_decode(<fuzzstring>)
<functioncall> = session_destroy()
<functioncall> = session_encode()
<functioncall> = session_gc()
<functioncall> = session_get_cookie_params()
<functioncall> = session_id(<fuzzstring>)
<functioncall> = session_module_name(<fuzzstring>)
<functioncall> = session_name(<fuzzstring>)
<functioncall> = session_regenerate_id(<fuzzbool>)
<functioncall> = session_register_shutdown()
<functioncall> = session_reset()
<functioncall> = session_save_path(<fuzzstring>)
<functioncall> = session_set_cookie_params(<fuzzarray>)
<functioncall> = session_set_cookie_params(<fuzzint>, <fuzzstring>, <fuzzstring>, <fuzzbool>, <fuzzbool>)
<functioncall> = session_set_save_handler(<fuzzcallable>, <fuzzcallable>, <fuzzcallable>, <fuzzcallable>, <fuzzcallable>, <fuzzcallable>, <fuzzcallable>, <fuzzcallable>, <fuzzcallable>)
<functioncall> = session_set_save_handler(<fuzzobject>, <fuzzbool>)
<functioncall> = session_start(<fuzzarray>)
<functioncall> = session_status()
<functioncall> = session_unset()
<functioncall> = session_write_close()
<functioncall> = setcookie(<fuzzstring>, <fuzzstring>, <fuzzarray>)
<functioncall> = setcookie(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzstring>, <fuzzstring>, <fuzzbool>, <fuzzbool>)
<functioncall> = set_error_handler(<fuzzcallable>, <fuzzint>)
<functioncall> = set_exception_handler(<fuzzcallable>)
<functioncall> = set_include_path(<fuzzstring>)
<functioncall> = setlocale(<fuzzint>, <fuzzarray>)
<functioncall> = setlocale(<fuzzint>, <fuzzstring>, <fuzzstring>)
<functioncall> = setrawcookie(<fuzzstring>, <fuzzstring>, <fuzzarray>)
<functioncall> = setrawcookie(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzstring>, <fuzzstring>, <fuzzbool>, <fuzzbool>)
<functioncall> = set_time_limit(<fuzzint>)
<functioncall> = settype(<fuzzmixedreference>, <fuzzstring>)
<functioncall> = sha1_file(<fuzzstring>, <fuzzbool>)
<functioncall> = sha1(<fuzzstring>, <fuzzbool>)
<functioncall> = shell_exec(<fuzzstring>)
<functioncall> = shuffle(<fuzzarrayreference>)
<functioncall> = simplexml_import_dom(<fuzzDOMNode>, <fuzzstring>)
<functioncall> = simplexml_load_file(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzstring>, <fuzzbool>)
<functioncall> = simplexml_load_string(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzstring>, <fuzzbool>)
<functioncall> = sin(<fuzzfloat>)
<functioncall> = sinh(<fuzzfloat>)
<functioncall> = sort(<fuzzarrayreference>, <fuzzint>)
<functioncall> = sort(<fuzzstring>)
<functioncall> = soundex(<fuzzstring>)
<functioncall> = spl_autoload_call(<fuzzstring>)
<functioncall> = spl_autoload_extensions(<fuzzstring>)
<functioncall> = spl_autoload_functions()
<functioncall> = spl_autoload(<fuzzstring>, <fuzzstring>)
<functioncall> = spl_autoload_register(<fuzzcallable>, <fuzzbool>, <fuzzbool>)
<functioncall> = spl_autoload_unregister(<fuzzmixed>)
<functioncall> = spl_classes()
<functioncall> = spl_object_hash(<fuzzobject>)
<functioncall> = spl_object_id(<fuzzobject>)
<functioncall> = sprintf(<fuzzstring>, <fuzzmixed>)
<functioncall> = sqrt(<fuzzfloat>)
<functioncall> = srand(<fuzzint>)
<functioncall> = sscanf(<fuzzstring>, <fuzzstring>, <fuzzmixedreference>)
<functioncall> = stat(<fuzzstring>)
<functioncall> = strcasecmp(<fuzzstring>, <fuzzstring>)
<functioncall> = strcmp(<fuzzstring>, <fuzzstring>)
<functioncall> = strcoll(<fuzzstring>, <fuzzstring>)
<functioncall> = strcspn(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzint>)
<functioncall> = stream_bucket_append(<fuzzresource>, <fuzzobject>)
<functioncall> = stream_bucket_make_writeable(<fuzzresource>)
<functioncall> = stream_bucket_new(<fuzzresource>, <fuzzstring>)
<functioncall> = stream_bucket_prepend(<fuzzresource>, <fuzzobject>)
<functioncall> = stream_context_create(<fuzzarray>, <fuzzarray>)
<functioncall> = stream_context_get_default(<fuzzarray>)
<functioncall> = stream_context_get_options(<fuzzresource>)
<functioncall> = stream_context_get_params(<fuzzresource>)
<functioncall> = stream_context_set_default(<fuzzarray>)
<functioncall> = stream_context_set_option(<fuzzresource>, <fuzzarray>)
<functioncall> = stream_context_set_option(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzmixed>)
<functioncall> = stream_context_set_params(<fuzzresource>, <fuzzarray>)
<functioncall> = stream_copy_to_stream(<fuzzresource>, <fuzzresource>, <fuzzint>, <fuzzint>)
<functioncall> = stream_filter_append(<fuzzresource>, <fuzzstring>, <fuzzint>, <fuzzmixed>)
<functioncall> = stream_filter_prepend(<fuzzresource>, <fuzzstring>, <fuzzint>, <fuzzmixed>)
<functioncall> = stream_filter_register(<fuzzstring>, <fuzzstring>)
<functioncall> = stream_filter_remove(<fuzzresource>)
<functioncall> = stream_get_contents(<fuzzresource>, <fuzzint>, <fuzzint>)
<functioncall> = stream_get_filters()
<functioncall> = stream_get_line(<fuzzresource>, <fuzzint>, <fuzzstring>)
<functioncall> = stream_get_meta_data(<fuzzresource>)
<functioncall> = stream_get_transports()
<functioncall> = stream_get_wrappers()
<functioncall> = stream_isatty(<fuzzresource>)
<functioncall> = stream_is_local(<fuzzmixed>)
<functioncall> = stream_resolve_include_path(<fuzzstring>)
<functioncall> = stream_select(<fuzzarrayreference>, <fuzzarrayreference>, <fuzzarrayreference>, <fuzzint>, <fuzzint>)
<functioncall> = stream_set_blocking(<fuzzresource>, <fuzzbool>)
<functioncall> = stream_set_chunk_size(<fuzzresource>, <fuzzint>)
<functioncall> = stream_set_read_buffer(<fuzzresource>, <fuzzint>)
<functioncall> = stream_set_timeout(<fuzzresource>, <fuzzint>, <fuzzint>)
<functioncall> = stream_set_write_buffer(<fuzzresource>, <fuzzint>)
<functioncall> = stream_socket_accept(<fuzzresource>, <fuzzfloat>, <fuzzstringreference>)
<functioncall> = stream_socket_client(<fuzzstring>, <fuzzintreference>, <fuzzstringreference>, <fuzzfloat>, <fuzzint>, <fuzzresource>)
<functioncall> = stream_socket_enable_crypto(<fuzzresource>, <fuzzbool>, <fuzzint>, <fuzzresource>)
<functioncall> = stream_socket_get_name(<fuzzresource>, <fuzzbool>)
<functioncall> = stream_socket_pair(<fuzzint>, <fuzzint>, <fuzzint>)
<functioncall> = stream_socket_sendto(<fuzzresource>, <fuzzstring>, <fuzzint>, <fuzzstring>)
<functioncall> = stream_socket_server(<fuzzstring>, <fuzzintreference>, <fuzzstringreference>, <fuzzint>, <fuzzresource>)
<functioncall> = stream_socket_shutdown(<fuzzresource>, <fuzzint>)
<functioncall> = stream_supports_lock(<fuzzresource>)
<functioncall> = stream_wrapper_register(<fuzzstring>, <fuzzstring>, <fuzzint>)
<functioncall> = stream_wrapper_restore(<fuzzstring>)
<functioncall> = stream_wrapper_unregister(<fuzzstring>)
<functioncall> = strftime(<fuzzstring>, <fuzzint>)
<functioncall> = str_getcsv(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = stripcslashes(<fuzzstring>)
<functioncall> = stripos(<fuzzstring>, <fuzzmixed>, <fuzzint>)
<functioncall> = stripslashes(<fuzzstring>)
<functioncall> = strip_tags(<fuzzstring>, <fuzzstring>)
<functioncall> = str_ireplace(<fuzzmixed>, <fuzzmixed>, <fuzzmixed>, <fuzzintreference>)
<functioncall> = stristr(<fuzzstring>, <fuzzmixed>, <fuzzbool>)
<functioncall> = strlen(<fuzzstring>)
<functioncall> = strnatcasecmp(<fuzzstring>, <fuzzstring>)
<functioncall> = strnatcmp(<fuzzstring>, <fuzzstring>)
<functioncall> = strncasecmp(<fuzzstring>, <fuzzstring>, <fuzzint>)
<functioncall> = strncmp(<fuzzstring>, <fuzzstring>, <fuzzint>)
<functioncall> = str_pad(<fuzzstring>, <fuzzint>, <fuzzstring>, <fuzzint>)
<functioncall> = strpbrk(<fuzzstring>, <fuzzstring>)
<functioncall> = strpos(<fuzzstring>, <fuzzmixed>, <fuzzint>)
<functioncall> = strptime(<fuzzstring>, <fuzzstring>)
<functioncall> = strrchr(<fuzzstring>, <fuzzmixed>)
<functioncall> = str_repeat(<fuzzstring>, <fuzzint>)
<functioncall> = str_replace(<fuzzmixed>, <fuzzmixed>, <fuzzmixed>, <fuzzintreference>)
<functioncall> = strrev(<fuzzstring>)
<functioncall> = strripos(<fuzzstring>, <fuzzmixed>, <fuzzint>)
<functioncall> = str_rot13(<fuzzstring>)
<functioncall> = strrpos(<fuzzstring>, <fuzzmixed>, <fuzzint>)
<functioncall> = str_shuffle(<fuzzstring>)
<functioncall> = str_split(<fuzzstring>, <fuzzint>)
<functioncall> = strspn(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzint>)
<functioncall> = strstr(<fuzzstring>, <fuzzmixed>, <fuzzbool>)
<functioncall> = strtok(<fuzzstring>)
<functioncall> = strtok(<fuzzstring>, <fuzzstring>)
<functioncall> = strtolower(<fuzzstring>)
<functioncall> = strtotime(<fuzzstring>, <fuzzint>)
<functioncall> = strtoupper(<fuzzstring>)
<functioncall> = strtr(<fuzzstring>, <fuzzarray>)
<functioncall> = strtr(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = strval(<fuzzmixed>)
<functioncall> = str_word_count(<fuzzstring>, <fuzzint>, <fuzzstring>)
<functioncall> = substr_compare(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzint>, <fuzzbool>)
<functioncall> = substr_count(<fuzzstring>, <fuzzstring>, <fuzzint>, <fuzzint>)
<functioncall> = substr(<fuzzstring>, <fuzzint>, <fuzzint>)
<functioncall> = substr_replace(<fuzzmixed>, <fuzzmixed>, <fuzzmixed>, <fuzzmixed>)
<functioncall> = symlink(<fuzzstring>, <fuzzstring>)
<functioncall> = sys_getloadavg()
<functioncall> = sys_get_temp_dir()
<functioncall> = system(<fuzzstring>, <fuzzintreference>)
<functioncall> = tan(<fuzzfloat>)
<functioncall> = tanh(<fuzzfloat>)
<functioncall> = tempnam(<fuzzstring>, <fuzzstring>)
<functioncall> = time()
<functioncall> = timezone_name_from_abbr(<fuzzstring>, <fuzzint>, <fuzzint>)
<functioncall> = timezone_version_get()
<functioncall> = tmpfile()
<functioncall> = token_get_all(<fuzzstring>, <fuzzint>)
<functioncall> = token_name(<fuzzint>)
<functioncall> = touch(<fuzzstring>, <fuzzint>, <fuzzint>)
<functioncall> = trait_exists(<fuzzstring>, <fuzzbool>)
<functioncall> = trigger_error(<fuzzstring>, <fuzzint>)
<functioncall> = trim(<fuzzstring>, <fuzzstring>)
<functioncall> = uasort(<fuzzarrayreference>, <fuzzcallable>)
<functioncall> = ucfirst(<fuzzstring>)
<functioncall> = ucwords(<fuzzstring>)
<functioncall> = uksort(<fuzzarrayreference>, <fuzzcallable>)
<functioncall> = umask(<fuzzint>)
<functioncall> = uniqid(<fuzzstring>, <fuzzbool>)
<functioncall> = unlink(<fuzzstring>, <fuzzresource>)
<functioncall> = unpack(<fuzzstring>, <fuzzstring>, <fuzzint>)
<functioncall> = unregister_tick_function(<fuzzcallable>)
<functioncall> = unserialize(<fuzzstring>, <fuzzarray>)
<functioncall> = urldecode(<fuzzstring>)
<functioncall> = urlencode(<fuzzstring>)
<functioncall> = usort(<fuzzarrayreference>, <fuzzcallable>)
<functioncall> = utf8_decode(<fuzzstring>)
<functioncall> = utf8_encode(<fuzzstring>)
<functioncall> = var_dump(<fuzzmixed>, <fuzzmixed>)
<functioncall> = var_export(<fuzzmixed>, <fuzzbool>)
<functioncall> = version_compare(<fuzzstring>, <fuzzstring>)
<functioncall> = version_compare(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = vfprintf(<fuzzresource>, <fuzzstring>, <fuzzarray>)
<functioncall> = vprintf(<fuzzstring>, <fuzzarray>)
<functioncall> = vsprintf(<fuzzstring>, <fuzzarray>)
<functioncall> = wordwrap(<fuzzstring>, <fuzzint>, <fuzzstring>, <fuzzbool>)
<functioncall> = xml_error_string(<fuzzint>)
<functioncall> = xml_get_current_byte_index(<fuzzresource>)
<functioncall> = xml_get_current_column_number(<fuzzresource>)
<functioncall> = xml_get_current_line_number(<fuzzresource>)
<functioncall> = xml_get_error_code(<fuzzresource>)
<functioncall> = xml_parse(<fuzzresource>, <fuzzstring>, <fuzzbool>)
<functioncall> = xml_parse_into_struct(<fuzzresource>, <fuzzstring>, <fuzzarrayreference>, <fuzzarrayreference>)
<functioncall> = xml_parser_create(<fuzzstring>)
<functioncall> = xml_parser_create_ns(<fuzzstring>, <fuzzstring>)
<functioncall> = xml_parser_free(<fuzzresource>)
<functioncall> = xml_parser_get_option(<fuzzresource>, <fuzzint>)
<functioncall> = xml_parser_set_option(<fuzzresource>, <fuzzint>, <fuzzmixed>)
<functioncall> = xml_set_character_data_handler(<fuzzresource>, <fuzzcallable>)
<functioncall> = xml_set_default_handler(<fuzzresource>, <fuzzcallable>)
<functioncall> = xml_set_element_handler(<fuzzresource>, <fuzzcallable>, <fuzzcallable>)
<functioncall> = xml_set_end_namespace_decl_handler(<fuzzresource>, <fuzzcallable>)
<functioncall> = xml_set_external_entity_ref_handler(<fuzzresource>, <fuzzcallable>)
<functioncall> = xml_set_notation_decl_handler(<fuzzresource>, <fuzzcallable>)
<functioncall> = xml_set_object(<fuzzresource>, <fuzzobjectreference>)
<functioncall> = xml_set_processing_instruction_handler(<fuzzresource>, <fuzzcallable>)
<functioncall> = xml_set_start_namespace_decl_handler(<fuzzresource>, <fuzzcallable>)
<functioncall> = xml_set_unparsed_entity_decl_handler(<fuzzresource>, <fuzzcallable>)
<functioncall> = xmlwriter_end_attribute(<fuzzresource>)
<functioncall> = xmlwriter_end_cdata(<fuzzresource>)
<functioncall> = xmlwriter_end_comment(<fuzzresource>)
<functioncall> = xmlwriter_end_document(<fuzzresource>)
<functioncall> = xmlwriter_end_dtd_attlist(<fuzzresource>)
<functioncall> = xmlwriter_end_dtd_element(<fuzzresource>)
<functioncall> = xmlwriter_end_dtd_entity(<fuzzresource>)
<functioncall> = xmlwriter_end_dtd(<fuzzresource>)
<functioncall> = xmlwriter_end_element(<fuzzresource>)
<functioncall> = xmlwriter_end_pi(<fuzzresource>)
<functioncall> = xmlwriter_flush(<fuzzresource>, <fuzzbool>)
<functioncall> = xmlwriter_full_end_element(<fuzzresource>)
<functioncall> = xmlwriter_open_memory()
<functioncall> = xmlwriter_open_uri(<fuzzstring>)
<functioncall> = xmlwriter_output_memory(<fuzzresource>, <fuzzbool>)
<functioncall> = xmlwriter_set_indent(<fuzzresource>, <fuzzbool>)
<functioncall> = xmlwriter_set_indent_string(<fuzzresource>, <fuzzstring>)
<functioncall> = xmlwriter_start_attribute(<fuzzresource>, <fuzzstring>)
<functioncall> = xmlwriter_start_attribute_ns(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = xmlwriter_start_cdata(<fuzzresource>)
<functioncall> = xmlwriter_start_comment(<fuzzresource>)
<functioncall> = xmlwriter_start_document(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = xmlwriter_start_dtd_attlist(<fuzzresource>, <fuzzstring>)
<functioncall> = xmlwriter_start_dtd_element(<fuzzresource>, <fuzzstring>)
<functioncall> = xmlwriter_start_dtd_entity(<fuzzresource>, <fuzzstring>, <fuzzbool>)
<functioncall> = xmlwriter_start_dtd(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = xmlwriter_start_element(<fuzzresource>, <fuzzstring>)
<functioncall> = xmlwriter_start_element_ns(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = xmlwriter_start_pi(<fuzzresource>, <fuzzstring>)
<functioncall> = xmlwriter_text(<fuzzresource>, <fuzzstring>)
<functioncall> = xmlwriter_write_attribute(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = xmlwriter_write_attribute_ns(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = xmlwriter_write_cdata(<fuzzresource>, <fuzzstring>)
<functioncall> = xmlwriter_write_comment(<fuzzresource>, <fuzzstring>)
<functioncall> = xmlwriter_write_dtd_attlist(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = xmlwriter_write_dtd_element(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = xmlwriter_write_dtd_entity(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzbool>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = xmlwriter_write_dtd(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = xmlwriter_write_element(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = xmlwriter_write_element_ns(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = xmlwriter_write_pi(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = xmlwriter_write_raw(<fuzzresource>, <fuzzstring>)
<functioncall> = zend_version()
<functioncall> = zip_close(<fuzzresource>)
<functioncall> = zip_entry_close(<fuzzresource>)
<functioncall> = zip_entry_compressedsize(<fuzzresource>)
<functioncall> = zip_entry_compressionmethod(<fuzzresource>)
<functioncall> = zip_entry_filesize(<fuzzresource>)
<functioncall> = zip_entry_name(<fuzzresource>)
<functioncall> = zip_entry_open(<fuzzresource>, <fuzzresource>, <fuzzstring>)
<functioncall> = zip_entry_read(<fuzzresource>, <fuzzint>)
<functioncall> = zip_open(<fuzzstring>)
<functioncall> = zip_read(<fuzzresource>)
<functioncall> = zlib_decode(<fuzzstring>, <fuzzstring>)
<functioncall> = zlib_encode(<fuzzstring>, <fuzzint>, <fuzzint>)
<functioncall> = zlib_get_coding_type()
<methodcall> = <obj_DateInterval>->createFromDateString(<fuzzstring>)
<methodcall> = <obj_DateInterval>->format(<fuzzstring>)
<methodcall> = <obj_DatePeriod>->getDateInterval()
<methodcall> = <obj_DatePeriod>->getEndDate()
<methodcall> = <obj_DatePeriod>->getRecurrences()
<methodcall> = <obj_DatePeriod>->getStartDate()
<methodcall> = <obj_DateTime>->add(<fuzzDateInterval>)
<methodcall> = <obj_DateTime>->createFromFormat(<fuzzstring>, <fuzzstring>, <fuzzDateTimeZone>)
<methodcall> = <obj_DateTime>->createFromImmutable(<fuzzDateTimeImmutable>)
<methodcall> = <obj_DateTime>->diff(<fuzzDateTimeInterface>, <fuzzbool>)
<methodcall> = <obj_DateTime>->format(<fuzzstring>)
<methodcall> = <obj_DateTime>->getLastErrors()
<methodcall> = <obj_DateTime>->getOffset()
<methodcall> = <obj_DateTime>->getTimestamp()
<methodcall> = <obj_DateTime>->getTimezone()
<methodcall> = <obj_DateTimeImmutable>->add(<fuzzDateInterval>)
<methodcall> = <obj_DateTimeImmutable>->createFromFormat(<fuzzstring>, <fuzzstring>, <fuzzDateTimeZone>)
<methodcall> = <obj_DateTimeImmutable>->createFromMutable(<fuzzDateTime>)
<methodcall> = <obj_DateTimeImmutable>->diff(<fuzzDateTimeInterface>, <fuzzbool>)
<methodcall> = <obj_DateTimeImmutable>->format(<fuzzstring>)
<methodcall> = <obj_DateTimeImmutable>->getLastErrors()
<methodcall> = <obj_DateTimeImmutable>->getOffset()
<methodcall> = <obj_DateTimeImmutable>->getTimestamp()
<methodcall> = <obj_DateTimeImmutable>->getTimezone()
<methodcall> = <obj_DateTimeImmutable>->modify(<fuzzstring>)
<methodcall> = <obj_DateTimeImmutable>->setDate(<fuzzint>, <fuzzint>, <fuzzint>)
<methodcall> = <obj_DateTimeImmutable>->setISODate(<fuzzint>, <fuzzint>, <fuzzint>)
<methodcall> = <obj_DateTimeImmutable>->__set_state(<fuzzarray>)
<methodcall> = <obj_DateTimeImmutable>->setTime(<fuzzint>, <fuzzint>, <fuzzint>, <fuzzint>)
<methodcall> = <obj_DateTimeImmutable>->setTimestamp(<fuzzint>)
<methodcall> = <obj_DateTimeImmutable>->setTimezone(<fuzzDateTimeZone>)
<methodcall> = <obj_DateTimeImmutable>->sub(<fuzzDateInterval>)
<methodcall> = <obj_DateTimeImmutable>->__wakeup()
<methodcall> = <obj_DateTime>->modify(<fuzzstring>)
<methodcall> = <obj_DateTime>->setDate(<fuzzint>, <fuzzint>, <fuzzint>)
<methodcall> = <obj_DateTime>->setISODate(<fuzzint>, <fuzzint>, <fuzzint>)
<methodcall> = <obj_DateTime>->__set_state(<fuzzarray>)
<methodcall> = <obj_DateTime>->setTime(<fuzzint>, <fuzzint>, <fuzzint>, <fuzzint>)
<methodcall> = <obj_DateTime>->setTimestamp(<fuzzint>)
<methodcall> = <obj_DateTime>->setTimezone(<fuzzDateTimeZone>)
<methodcall> = <obj_DateTime>->sub(<fuzzDateInterval>)
<methodcall> = <obj_DateTime>->__wakeup()
<methodcall> = <obj_DateTimeZone>->getLocation()
<methodcall> = <obj_DateTimeZone>->getName()
<methodcall> = <obj_DateTimeZone>->getOffset(<fuzzDateTimeInterface>)
<methodcall> = <obj_DateTimeZone>->getTransitions(<fuzzint>, <fuzzint>)
<methodcall> = <obj_DateTimeZone>->listAbbreviations()
<methodcall> = <obj_DateTimeZone>->listIdentifiers(<fuzzint>, <fuzzstring>)
<methodcall> = <obj_Directory>->close(<fuzzresource>)
<methodcall> = <obj_Directory>->read(<fuzzresource>)
<methodcall> = <obj_Directory>->rewind(<fuzzresource>)
<methodcall> = <obj_DOMAttr>->__construct(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMAttr>->isId()
<methodcall> = <obj_DOMCharacterData>->appendData(<fuzzstring>)
<methodcall> = <obj_DOMCharacterData>->deleteData(<fuzzint>, <fuzzint>)
<methodcall> = <obj_DOMCharacterData>->insertData(<fuzzint>, <fuzzstring>)
<methodcall> = <obj_DOMCharacterData>->replaceData(<fuzzint>, <fuzzint>, <fuzzstring>)
<methodcall> = <obj_DOMCharacterData>->substringData(<fuzzint>, <fuzzint>)
<methodcall> = <obj_DOMComment>->__construct(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->__construct(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMDocument>->createAttribute(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->createAttributeNS(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMDocument>->createCDATASection(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->createComment(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->createDocumentFragment()
<methodcall> = <obj_DOMDocument>->createElement(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMDocument>->createElementNS(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMDocument>->createEntityReference(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->createProcessingInstruction(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMDocument>->createTextNode(<fuzzstring>)
<methodcall> = <obj_DOMDocumentFragment>->appendXML(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->getElementById(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->getElementsByTagName(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->getElementsByTagNameNS(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMDocument>->importNode(<fuzzDOMNode>, <fuzzbool>)
<methodcall> = <obj_DOMDocument>->load(<fuzzstring>, <fuzzint>)
<methodcall> = <obj_DOMDocument>->loadHTMLFile(<fuzzstring>, <fuzzint>)
<methodcall> = <obj_DOMDocument>->loadHTML(<fuzzstring>, <fuzzint>)
<methodcall> = <obj_DOMDocument>->loadXML(<fuzzstring>, <fuzzint>)
<methodcall> = <obj_DOMDocument>->normalizeDocument()
<methodcall> = <obj_DOMDocument>->registerNodeClass(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMDocument>->relaxNGValidate(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->relaxNGValidateSource(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->save(<fuzzstring>, <fuzzint>)
<methodcall> = <obj_DOMDocument>->saveHTMLFile(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->saveHTML(<fuzzDOMNode>)
<methodcall> = <obj_DOMDocument>->saveXML(<fuzzDOMNode>, <fuzzint>)
<methodcall> = <obj_DOMDocument>->schemaValidate(<fuzzstring>, <fuzzint>)
<methodcall> = <obj_DOMDocument>->schemaValidateSource(<fuzzstring>, <fuzzint>)
<methodcall> = <obj_DOMDocument>->validate()
<methodcall> = <obj_DOMDocument>->xinclude(<fuzzint>)
<methodcall> = <obj_DOMElement>->__construct(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->getAttribute(<fuzzstring>)
<methodcall> = <obj_DOMElement>->getAttributeNode(<fuzzstring>)
<methodcall> = <obj_DOMElement>->getAttributeNodeNS(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->getAttributeNS(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->getElementsByTagName(<fuzzstring>)
<methodcall> = <obj_DOMElement>->getElementsByTagNameNS(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->hasAttribute(<fuzzstring>)
<methodcall> = <obj_DOMElement>->hasAttributeNS(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->removeAttribute(<fuzzstring>)
<methodcall> = <obj_DOMElement>->removeAttributeNode(<fuzzDOMAttr>)
<methodcall> = <obj_DOMElement>->removeAttributeNS(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->setAttribute(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->setAttributeNode(<fuzzDOMAttr>)
<methodcall> = <obj_DOMElement>->setAttributeNodeNS(<fuzzDOMAttr>)
<methodcall> = <obj_DOMElement>->setAttributeNS(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->setIdAttribute(<fuzzstring>, <fuzzbool>)
<methodcall> = <obj_DOMElement>->setIdAttributeNode(<fuzzDOMAttr>, <fuzzbool>)
<methodcall> = <obj_DOMElement>->setIdAttributeNS(<fuzzstring>, <fuzzstring>, <fuzzbool>)
<methodcall> = <obj_DOMEntityReference>->__construct(<fuzzstring>)
<methodcall> = <obj_DOMImplementation>->createDocument(<fuzzstring>, <fuzzstring>, <fuzzDOMDocumentType>)
<methodcall> = <obj_DOMImplementation>->createDocumentType(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMImplementation>->hasFeature(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMNamedNodeMap>->count()
<methodcall> = <obj_DOMNamedNodeMap>->getNamedItem(<fuzzstring>)
<methodcall> = <obj_DOMNamedNodeMap>->getNamedItemNS(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMNamedNodeMap>->item(<fuzzint>)
<methodcall> = <obj_DOMNode>->appendChild(<fuzzDOMNode>)
<methodcall> = <obj_DOMNode>->C14NFile(<fuzzstring>, <fuzzbool>, <fuzzbool>, <fuzzarray>, <fuzzarray>)
<methodcall> = <obj_DOMNode>->C14N(<fuzzbool>, <fuzzbool>, <fuzzarray>, <fuzzarray>)
<methodcall> = <obj_DOMNode>->cloneNode(<fuzzbool>)
<methodcall> = <obj_DOMNode>->getLineNo()
<methodcall> = <obj_DOMNode>->getNodePath()
<methodcall> = <obj_DOMNode>->hasAttributes()
<methodcall> = <obj_DOMNode>->hasChildNodes()
<methodcall> = <obj_DOMNode>->insertBefore(<fuzzDOMNode>, <fuzzDOMNode>)
<methodcall> = <obj_DOMNode>->isDefaultNamespace(<fuzzstring>)
<methodcall> = <obj_DOMNode>->isSameNode(<fuzzDOMNode>)
<methodcall> = <obj_DOMNode>->isSupported(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMNodeList>->count()
<methodcall> = <obj_DOMNodeList>->item(<fuzzint>)
<methodcall> = <obj_DOMNode>->lookupNamespaceUri(<fuzzstring>)
<methodcall> = <obj_DOMNode>->lookupPrefix(<fuzzstring>)
<methodcall> = <obj_DOMNode>->normalize()
<methodcall> = <obj_DOMNode>->removeChild(<fuzzDOMNode>)
<methodcall> = <obj_DOMNode>->replaceChild(<fuzzDOMNode>, <fuzzDOMNode>)
<methodcall> = <obj_DOMProcessingInstruction>->__construct(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMText>->isElementContentWhitespace()
<methodcall> = <obj_DOMText>->isWhitespaceInElementContent()
<methodcall> = <obj_DOMText>->splitText(<fuzzint>)
<methodcall> = <obj_DOMXPath>->__construct(<fuzzDOMDocument>)
<methodcall> = <obj_DOMXPath>->evaluate(<fuzzstring>, <fuzzDOMNode>, <fuzzbool>)
<methodcall> = <obj_DOMXPath>->query(<fuzzstring>, <fuzzDOMNode>, <fuzzbool>)
<methodcall> = <obj_DOMXPath>->registerNamespace(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMXPath>->registerPhpFunctions(<fuzzmixed>)
<methodcall> = <obj_ErrorException>->getSeverity()
<methodcall> = <obj_Error>->getCode()
<methodcall> = <obj_Error>->getFile()
<methodcall> = <obj_Error>->getLine()
<methodcall> = <obj_Error>->getMessage()
<methodcall> = <obj_Error>->getPrevious()
<methodcall> = <obj_Error>->getTrace()
<methodcall> = <obj_Error>->getTraceAsString()
<methodcall> = <obj_Error>->__toString()
<methodcall> = <obj_Exception>->getCode()
<methodcall> = <obj_Exception>->getFile()
<methodcall> = <obj_Exception>->getLine()
<methodcall> = <obj_Exception>->getMessage()
<methodcall> = <obj_Exception>->getPrevious()
<methodcall> = <obj_Exception>->getTrace()
<methodcall> = <obj_Exception>->getTraceAsString()
<methodcall> = <obj_Exception>->__toString()
<methodcall> = <obj_finfo>->buffer(<fuzzstring>, <fuzzint>, <fuzzresource>)
<methodcall> = <obj_finfo>->file(<fuzzstring>, <fuzzint>, <fuzzresource>)
<methodcall> = <obj_finfo>->set_flags(<fuzzint>)
<methodcall> = <obj_MultipleIterator>->attachIterator(<fuzzIterator>, <fuzzstring>)
<methodcall> = <obj_MultipleIterator>->containsIterator(<fuzzIterator>)
<methodcall> = <obj_MultipleIterator>->countIterators()
<methodcall> = <obj_MultipleIterator>->current()
<methodcall> = <obj_MultipleIterator>->detachIterator(<fuzzIterator>)
<methodcall> = <obj_MultipleIterator>->getFlags()
<methodcall> = <obj_MultipleIterator>->key()
<methodcall> = <obj_MultipleIterator>->next()
<methodcall> = <obj_MultipleIterator>->rewind()
<methodcall> = <obj_MultipleIterator>->setFlags(<fuzzint>)
<methodcall> = <obj_MultipleIterator>->valid()
<methodcall> = <obj_php_user_filter>->filter(<fuzzresource>, <fuzzresource>, <fuzzintreference>, <fuzzbool>)
<methodcall> = <obj_php_user_filter>->onClose()
<methodcall> = <obj_php_user_filter>->onCreate()
<methodcall> = <obj_ReflectionClassConstant>->__construct(<fuzzmixed>, <fuzzstring>)
<methodcall> = <obj_ReflectionClassConstant>->export(<fuzzmixed>, <fuzzstring>, <fuzzbool>)
<methodcall> = <obj_ReflectionClassConstant>->getDeclaringClass()
<methodcall> = <obj_ReflectionClassConstant>->getDocComment()
<methodcall> = <obj_ReflectionClassConstant>->getModifiers()
<methodcall> = <obj_ReflectionClassConstant>->getName()
<methodcall> = <obj_ReflectionClassConstant>->getValue()
<methodcall> = <obj_ReflectionClassConstant>->isPrivate()
<methodcall> = <obj_ReflectionClassConstant>->isProtected()
<methodcall> = <obj_ReflectionClassConstant>->isPublic()
<methodcall> = <obj_ReflectionClassConstant>->__toString()
<methodcall> = <obj_ReflectionClass>->__construct(<fuzzmixed>)
<methodcall> = <obj_ReflectionClass>->export(<fuzzmixed>, <fuzzbool>)
<methodcall> = <obj_ReflectionClass>->getConstant(<fuzzstring>)
<methodcall> = <obj_ReflectionClass>->getConstants()
<methodcall> = <obj_ReflectionClass>->getConstructor()
<methodcall> = <obj_ReflectionClass>->getDefaultProperties()
<methodcall> = <obj_ReflectionClass>->getDocComment()
<methodcall> = <obj_ReflectionClass>->getEndLine()
<methodcall> = <obj_ReflectionClass>->getExtension()
<methodcall> = <obj_ReflectionClass>->getExtensionName()
<methodcall> = <obj_ReflectionClass>->getFileName()
<methodcall> = <obj_ReflectionClass>->getInterfaceNames()
<methodcall> = <obj_ReflectionClass>->getInterfaces()
<methodcall> = <obj_ReflectionClass>->getMethod(<fuzzstring>)
<methodcall> = <obj_ReflectionClass>->getMethods(<fuzzint>)
<methodcall> = <obj_ReflectionClass>->getModifiers()
<methodcall> = <obj_ReflectionClass>->getName()
<methodcall> = <obj_ReflectionClass>->getNamespaceName()
<methodcall> = <obj_ReflectionClass>->getParentClass()
<methodcall> = <obj_ReflectionClass>->getProperties(<fuzzint>)
<methodcall> = <obj_ReflectionClass>->getProperty(<fuzzstring>)
<methodcall> = <obj_ReflectionClass>->getReflectionConstant(<fuzzstring>)
<methodcall> = <obj_ReflectionClass>->getReflectionConstants()
<methodcall> = <obj_ReflectionClass>->getShortName()
<methodcall> = <obj_ReflectionClass>->getStartLine()
<methodcall> = <obj_ReflectionClass>->getStaticProperties()
<methodcall> = <obj_ReflectionClass>->getStaticPropertyValue(<fuzzstring>, <fuzzmixedreference>)
<methodcall> = <obj_ReflectionClass>->getTraitAliases()
<methodcall> = <obj_ReflectionClass>->getTraitNames()
<methodcall> = <obj_ReflectionClass>->getTraits()
<methodcall> = <obj_ReflectionClass>->hasConstant(<fuzzstring>)
<methodcall> = <obj_ReflectionClass>->hasMethod(<fuzzstring>)
<methodcall> = <obj_ReflectionClass>->hasProperty(<fuzzstring>)
<methodcall> = <obj_ReflectionClass>->implementsInterface(<fuzzstring>)
<methodcall> = <obj_ReflectionClass>->inNamespace()
<methodcall> = <obj_ReflectionClass>->isAbstract()
<methodcall> = <obj_ReflectionClass>->isAnonymous()
<methodcall> = <obj_ReflectionClass>->isCloneable()
<methodcall> = <obj_ReflectionClass>->isFinal()
<methodcall> = <obj_ReflectionClass>->isInstance(<fuzzobject>)
<methodcall> = <obj_ReflectionClass>->isInstantiable()
<methodcall> = <obj_ReflectionClass>->isInterface()
<methodcall> = <obj_ReflectionClass>->isInternal()
<methodcall> = <obj_ReflectionClass>->isIterable()
<methodcall> = <obj_ReflectionClass>->isSubclassOf(<fuzzmixed>)
<methodcall> = <obj_ReflectionClass>->isTrait()
<methodcall> = <obj_ReflectionClass>->isUserDefined()
<methodcall> = <obj_ReflectionClass>->newInstanceArgs(<fuzzarray>)
<methodcall> = <obj_ReflectionClass>->newInstance(<fuzzmixed>)
<methodcall> = <obj_ReflectionClass>->newInstanceWithoutConstructor()
<methodcall> = <obj_ReflectionClass>->setStaticPropertyValue(<fuzzstring>, <fuzzmixed>)
<methodcall> = <obj_ReflectionClass>->__toString()
<methodcall> = <obj_Reflection>->export(<fuzzReflector>, <fuzzbool>)
<methodcall> = <obj_ReflectionExtension>->__construct(<fuzzstring>)
<methodcall> = <obj_ReflectionExtension>->export(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_ReflectionExtension>->getClasses()
<methodcall> = <obj_ReflectionExtension>->getClassNames()
<methodcall> = <obj_ReflectionExtension>->getConstants()
<methodcall> = <obj_ReflectionExtension>->getDependencies()
<methodcall> = <obj_ReflectionExtension>->getFunctions()
<methodcall> = <obj_ReflectionExtension>->getINIEntries()
<methodcall> = <obj_ReflectionExtension>->getName()
<methodcall> = <obj_ReflectionExtension>->getVersion()
<methodcall> = <obj_ReflectionExtension>->info()
<methodcall> = <obj_ReflectionExtension>->isPersistent()
<methodcall> = <obj_ReflectionExtension>->isTemporary()
<methodcall> = <obj_ReflectionExtension>->__toString()
<methodcall> = <obj_ReflectionFunction>->__construct(<fuzzmixed>)
<methodcall> = <obj_ReflectionFunction>->export(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_ReflectionFunction>->getClosure()
<methodcall> = <obj_ReflectionFunction>->invokeArgs(<fuzzarray>)
<methodcall> = <obj_ReflectionFunction>->invoke(<fuzzmixed>)
<methodcall> = <obj_ReflectionFunction>->isDisabled()
<methodcall> = <obj_ReflectionFunction>->__toString()
<methodcall> = <obj_ReflectionGenerator>->__construct(<fuzzGenerator>)
<methodcall> = <obj_ReflectionGenerator>->getExecutingFile()
<methodcall> = <obj_ReflectionGenerator>->getExecutingGenerator()
<methodcall> = <obj_ReflectionGenerator>->getExecutingLine()
<methodcall> = <obj_ReflectionGenerator>->getFunction()
<methodcall> = <obj_ReflectionGenerator>->getThis()
<methodcall> = <obj_ReflectionGenerator>->getTrace(<fuzzint>)
<methodcall> = <obj_Reflection>->getModifierNames(<fuzzint>)
<methodcall> = <obj_ReflectionMethod>->__construct(<fuzzmixed>, <fuzzstring>)
<methodcall> = <obj_ReflectionMethod>->__construct(<fuzzstring>)
<methodcall> = <obj_ReflectionMethod>->export(<fuzzstring>, <fuzzstring>, <fuzzbool>)
<methodcall> = <obj_ReflectionMethod>->getClosure()
<methodcall> = <obj_ReflectionMethod>->getClosure(<fuzzobject>)
<methodcall> = <obj_ReflectionMethod>->getDeclaringClass()
<methodcall> = <obj_ReflectionMethod>->getModifiers()
<methodcall> = <obj_ReflectionMethod>->getPrototype()
<methodcall> = <obj_ReflectionMethod>->invokeArgs(<fuzzobject>, <fuzzarray>)
<methodcall> = <obj_ReflectionMethod>->invoke(<fuzzobject>, <fuzzmixed>)
<methodcall> = <obj_ReflectionMethod>->isAbstract()
<methodcall> = <obj_ReflectionMethod>->isConstructor()
<methodcall> = <obj_ReflectionMethod>->isDestructor()
<methodcall> = <obj_ReflectionMethod>->isFinal()
<methodcall> = <obj_ReflectionMethod>->isPrivate()
<methodcall> = <obj_ReflectionMethod>->isProtected()
<methodcall> = <obj_ReflectionMethod>->isPublic()
<methodcall> = <obj_ReflectionMethod>->isStatic()
<methodcall> = <obj_ReflectionMethod>->setAccessible(<fuzzbool>)
<methodcall> = <obj_ReflectionMethod>->__toString()
<methodcall> = <obj_ReflectionNamedType>->getName()
<methodcall> = <obj_ReflectionObject>->__construct(<fuzzobject>)
<methodcall> = <obj_ReflectionObject>->export(<fuzzstring>, <fuzzbool>)
<methodcall> = <obj_ReflectionParameter>->allowsNull()
<methodcall> = <obj_ReflectionParameter>->canBePassedByValue()
<methodcall> = <obj_ReflectionParameter>->__construct(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_ReflectionParameter>->export(<fuzzstring>, <fuzzstring>, <fuzzbool>)
<methodcall> = <obj_ReflectionParameter>->getClass()
<methodcall> = <obj_ReflectionParameter>->getDeclaringClass()
<methodcall> = <obj_ReflectionParameter>->getDeclaringFunction()
<methodcall> = <obj_ReflectionParameter>->getDefaultValue()
<methodcall> = <obj_ReflectionParameter>->getDefaultValueConstantName()
<methodcall> = <obj_ReflectionParameter>->getName()
<methodcall> = <obj_ReflectionParameter>->getPosition()
<methodcall> = <obj_ReflectionParameter>->getType()
<methodcall> = <obj_ReflectionParameter>->hasType()
<methodcall> = <obj_ReflectionParameter>->isArray()
<methodcall> = <obj_ReflectionParameter>->isCallable()
<methodcall> = <obj_ReflectionParameter>->isDefaultValueAvailable()
<methodcall> = <obj_ReflectionParameter>->isDefaultValueConstant()
<methodcall> = <obj_ReflectionParameter>->isOptional()
<methodcall> = <obj_ReflectionParameter>->isPassedByReference()
<methodcall> = <obj_ReflectionParameter>->isVariadic()
<methodcall> = <obj_ReflectionParameter>->__toString()
<methodcall> = <obj_ReflectionProperty>->__construct(<fuzzmixed>, <fuzzstring>)
<methodcall> = <obj_ReflectionProperty>->export(<fuzzmixed>, <fuzzstring>, <fuzzbool>)
<methodcall> = <obj_ReflectionProperty>->getDeclaringClass()
<methodcall> = <obj_ReflectionProperty>->getDocComment()
<methodcall> = <obj_ReflectionProperty>->getModifiers()
<methodcall> = <obj_ReflectionProperty>->getName()
<methodcall> = <obj_ReflectionProperty>->getValue(<fuzzobject>)
<methodcall> = <obj_ReflectionProperty>->isDefault()
<methodcall> = <obj_ReflectionProperty>->isPrivate()
<methodcall> = <obj_ReflectionProperty>->isProtected()
<methodcall> = <obj_ReflectionProperty>->isPublic()
<methodcall> = <obj_ReflectionProperty>->isStatic()
<methodcall> = <obj_ReflectionProperty>->setAccessible(<fuzzbool>)
<methodcall> = <obj_ReflectionProperty>->setValue(<fuzzmixed>)
<methodcall> = <obj_ReflectionProperty>->setValue(<fuzzobject>, <fuzzmixed>)
<methodcall> = <obj_ReflectionProperty>->__toString()
<methodcall> = <obj_ReflectionType>->allowsNull()
<methodcall> = <obj_ReflectionType>->isBuiltin()
<methodcall> = <obj_ReflectionType>->__toString()
<methodcall> = <obj_SessionHandler>->close()
<methodcall> = <obj_SessionHandler>->create_sid()
<methodcall> = <obj_SessionHandler>->destroy(<fuzzstring>)
<methodcall> = <obj_SessionHandler>->gc(<fuzzint>)
<methodcall> = <obj_SessionHandler>->open(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SessionHandler>->read(<fuzzstring>)
<methodcall> = <obj_SessionHandler>->write(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SimpleXMLElement>->addAttribute(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SimpleXMLElement>->addChild(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SimpleXMLElement>->asXML(<fuzzstring>)
<methodcall> = <obj_SimpleXMLElement>->attributes(<fuzzstring>, <fuzzbool>)
<methodcall> = <obj_SimpleXMLElement>->children(<fuzzstring>, <fuzzbool>)
<methodcall> = <obj_SimpleXMLElement>->count()
<methodcall> = <obj_SimpleXMLElement>->getDocNamespaces(<fuzzbool>, <fuzzbool>)
<methodcall> = <obj_SimpleXMLElement>->getName()
<methodcall> = <obj_SimpleXMLElement>->getNamespaces(<fuzzbool>)
<methodcall> = <obj_SimpleXMLElement>->registerXPathNamespace(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SimpleXMLElement>->__toString()
<methodcall> = <obj_SimpleXMLElement>->xpath(<fuzzstring>)
<methodcall> = <obj_SimpleXMLIterator>->current()
<methodcall> = <obj_SimpleXMLIterator>->getChildren()
<methodcall> = <obj_SimpleXMLIterator>->hasChildren()
<methodcall> = <obj_SimpleXMLIterator>->key()
<methodcall> = <obj_SimpleXMLIterator>->next()
<methodcall> = <obj_SimpleXMLIterator>->rewind()
<methodcall> = <obj_SimpleXMLIterator>->valid()
<methodcall> = <obj_SplDoublyLinkedList>->add(<fuzzmixed>, <fuzzmixed>)
<methodcall> = <obj_SplDoublyLinkedList>->bottom()
<methodcall> = <obj_SplDoublyLinkedList>->count()
<methodcall> = <obj_SplDoublyLinkedList>->current()
<methodcall> = <obj_SplDoublyLinkedList>->getIteratorMode()
<methodcall> = <obj_SplDoublyLinkedList>->isEmpty()
<methodcall> = <obj_SplDoublyLinkedList>->key()
<methodcall> = <obj_SplDoublyLinkedList>->next()
<methodcall> = <obj_SplDoublyLinkedList>->offsetExists(<fuzzmixed>)
<methodcall> = <obj_SplDoublyLinkedList>->offsetGet(<fuzzmixed>)
<methodcall> = <obj_SplDoublyLinkedList>->offsetSet(<fuzzmixed>, <fuzzmixed>)
<methodcall> = <obj_SplDoublyLinkedList>->offsetUnset(<fuzzmixed>)
<methodcall> = <obj_SplDoublyLinkedList>->pop()
<methodcall> = <obj_SplDoublyLinkedList>->prev()
<methodcall> = <obj_SplDoublyLinkedList>->push(<fuzzmixed>)
<methodcall> = <obj_SplDoublyLinkedList>->rewind()
<methodcall> = <obj_SplDoublyLinkedList>->serialize()
<methodcall> = <obj_SplDoublyLinkedList>->setIteratorMode(<fuzzint>)
<methodcall> = <obj_SplDoublyLinkedList>->shift()
<methodcall> = <obj_SplDoublyLinkedList>->top()
<methodcall> = <obj_SplDoublyLinkedList>->unserialize(<fuzzstring>)
<methodcall> = <obj_SplDoublyLinkedList>->unshift(<fuzzmixed>)
<methodcall> = <obj_SplDoublyLinkedList>->valid()
<methodcall> = <obj_SplFileObject>->current()
<methodcall> = <obj_SplFileObject>->eof()
<methodcall> = <obj_SplFileObject>->fflush()
<methodcall> = <obj_SplFileObject>->fgetc()
<methodcall> = <obj_SplFileObject>->fgetcsv(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SplFileObject>->fgets()
<methodcall> = <obj_SplFileObject>->fgetss(<fuzzstring>)
<methodcall> = <obj_SplFileObject>->flock(<fuzzint>, <fuzzintreference>)
<methodcall> = <obj_SplFileObject>->fpassthru()
<methodcall> = <obj_SplFileObject>->fputcsv(<fuzzarray>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SplFileObject>->fread(<fuzzint>)
<methodcall> = <obj_SplFileObject>->fscanf(<fuzzstring>, <fuzzmixedreference>)
<methodcall> = <obj_SplFileObject>->fseek(<fuzzint>, <fuzzint>)
<methodcall> = <obj_SplFileObject>->fstat()
<methodcall> = <obj_SplFileObject>->ftell()
<methodcall> = <obj_SplFileObject>->ftruncate(<fuzzint>)
<methodcall> = <obj_SplFileObject>->fwrite(<fuzzstring>, <fuzzint>)
<methodcall> = <obj_SplFileObject>->getChildren()
<methodcall> = <obj_SplFileObject>->getCsvControl()
<methodcall> = <obj_SplFileObject>->getFlags()
<methodcall> = <obj_SplFileObject>->getMaxLineLen()
<methodcall> = <obj_SplFileObject>->hasChildren()
<methodcall> = <obj_SplFileObject>->key()
<methodcall> = <obj_SplFileObject>->next()
<methodcall> = <obj_SplFileObject>->rewind()
<methodcall> = <obj_SplFileObject>->seek(<fuzzint>)
<methodcall> = <obj_SplFileObject>->setCsvControl(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SplFileObject>->setFlags(<fuzzint>)
<methodcall> = <obj_SplFileObject>->setMaxLineLen(<fuzzint>)
<methodcall> = <obj_SplFileObject>->valid()
<methodcall> = <obj_SplFixedArray>->count()
<methodcall> = <obj_SplFixedArray>->current()
<methodcall> = <obj_SplFixedArray>->fromArray(<fuzzarray>, <fuzzbool>)
<methodcall> = <obj_SplFixedArray>->getSize()
<methodcall> = <obj_SplFixedArray>->key()
<methodcall> = <obj_SplFixedArray>->next()
<methodcall> = <obj_SplFixedArray>->offsetExists(<fuzzint>)
<methodcall> = <obj_SplFixedArray>->offsetGet(<fuzzint>)
<methodcall> = <obj_SplFixedArray>->offsetSet(<fuzzint>, <fuzzmixed>)
<methodcall> = <obj_SplFixedArray>->offsetUnset(<fuzzint>)
<methodcall> = <obj_SplFixedArray>->rewind()
<methodcall> = <obj_SplFixedArray>->setSize(<fuzzint>)
<methodcall> = <obj_SplFixedArray>->toArray()
<methodcall> = <obj_SplFixedArray>->valid()
<methodcall> = <obj_SplFixedArray>->__wakeup()
<methodcall> = <obj_SplObjectStorage>->addAll(<fuzzSplObjectStorage>)
<methodcall> = <obj_SplObjectStorage>->attach(<fuzzobject>, <fuzzmixed>)
<methodcall> = <obj_SplObjectStorage>->contains(<fuzzobject>)
<methodcall> = <obj_SplObjectStorage>->count()
<methodcall> = <obj_SplObjectStorage>->current()
<methodcall> = <obj_SplObjectStorage>->detach(<fuzzobject>)
<methodcall> = <obj_SplObjectStorage>->getHash(<fuzzobject>)
<methodcall> = <obj_SplObjectStorage>->getInfo()
<methodcall> = <obj_SplObjectStorage>->key()
<methodcall> = <obj_SplObjectStorage>->next()
<methodcall> = <obj_SplObjectStorage>->offsetExists(<fuzzobject>)
<methodcall> = <obj_SplObjectStorage>->offsetGet(<fuzzobject>)
<methodcall> = <obj_SplObjectStorage>->offsetSet(<fuzzobject>, <fuzzmixed>)
<methodcall> = <obj_SplObjectStorage>->offsetUnset(<fuzzobject>)
<methodcall> = <obj_SplObjectStorage>->removeAllExcept(<fuzzSplObjectStorage>)
<methodcall> = <obj_SplObjectStorage>->removeAll(<fuzzSplObjectStorage>)
<methodcall> = <obj_SplObjectStorage>->rewind()
<methodcall> = <obj_SplObjectStorage>->serialize()
<methodcall> = <obj_SplObjectStorage>->setInfo(<fuzzmixed>)
<methodcall> = <obj_SplObjectStorage>->unserialize(<fuzzstring>)
<methodcall> = <obj_SplObjectStorage>->valid()
<methodcall> = <obj_SplPriorityQueue>->compare(<fuzzmixed>, <fuzzmixed>)
<methodcall> = <obj_SplPriorityQueue>->count()
<methodcall> = <obj_SplPriorityQueue>->current()
<methodcall> = <obj_SplPriorityQueue>->extract()
<methodcall> = <obj_SplPriorityQueue>->getExtractFlags()
<methodcall> = <obj_SplPriorityQueue>->insert(<fuzzmixed>, <fuzzmixed>)
<methodcall> = <obj_SplPriorityQueue>->isCorrupted()
<methodcall> = <obj_SplPriorityQueue>->isEmpty()
<methodcall> = <obj_SplPriorityQueue>->key()
<methodcall> = <obj_SplPriorityQueue>->next()
<methodcall> = <obj_SplPriorityQueue>->recoverFromCorruption()
<methodcall> = <obj_SplPriorityQueue>->rewind()
<methodcall> = <obj_SplPriorityQueue>->setExtractFlags(<fuzzint>)
<methodcall> = <obj_SplPriorityQueue>->top()
<methodcall> = <obj_SplPriorityQueue>->valid()
<methodcall> = <obj_SplQueue>->dequeue()
<methodcall> = <obj_SplQueue>->enqueue(<fuzzmixed>)
<methodcall> = <obj_SplQueue>->setIteratorMode(<fuzzint>)
<methodcall> = <obj_SplStack>->setIteratorMode(<fuzzint>)
<obj_DateInterval> = $vars["DateInterval"]
<obj_DatePeriod> = $vars["DatePeriod"]
<obj_DateTime> = $vars["DateTime"]
<obj_DateTimeImmutable> = $vars["DateTimeImmutable"]
<obj_DateTimeZone> = $vars["DateTimeZone"]
<obj_Directory> = $vars["Directory"]
<obj_DOMAttr> = $vars["DOMAttr"]
<obj_DOMCharacterData> = $vars["DOMCharacterData"]
<obj_DOMComment> = $vars["DOMComment"]
<obj_DOMDocument> = $vars["DOMDocument"]
<obj_DOMDocumentFragment> = $vars["DOMDocumentFragment"]
<obj_DOMElement> = $vars["DOMElement"]
<obj_DOMEntityReference> = $vars["DOMEntityReference"]
<obj_DOMImplementation> = $vars["DOMImplementation"]
<obj_DOMNamedNodeMap> = $vars["DOMNamedNodeMap"]
<obj_DOMNode> = $vars["DOMNode"]
<obj_DOMNodeList> = $vars["DOMNodeList"]
<obj_DOMProcessingInstruction> = $vars["DOMProcessingInstruction"]
<obj_DOMText> = $vars["DOMText"]
<obj_DOMXPath> = $vars["DOMXPath"]
<obj_Error> = $vars["Error"]
<obj_ErrorException> = $vars["ErrorException"]
<obj_Exception> = $vars["Exception"]
<obj_finfo> = $vars["finfo"]
<obj_MultipleIterator> = $vars["MultipleIterator"]
<obj_php_user_filter> = $vars["php_user_filter"]
<obj_Reflection> = $vars["Reflection"]
<obj_ReflectionClass> = $vars["ReflectionClass"]
<obj_ReflectionClassConstant> = $vars["ReflectionClassConstant"]
<obj_ReflectionExtension> = $vars["ReflectionExtension"]
<obj_ReflectionFunction> = $vars["ReflectionFunction"]
<obj_ReflectionGenerator> = $vars["ReflectionGenerator"]
<obj_ReflectionMethod> = $vars["ReflectionMethod"]
<obj_ReflectionNamedType> = $vars["ReflectionNamedType"]
<obj_ReflectionObject> = $vars["ReflectionObject"]
<obj_ReflectionParameter> = $vars["ReflectionParameter"]
<obj_ReflectionProperty> = $vars["ReflectionProperty"]
<obj_ReflectionType> = $vars["ReflectionType"]
<obj_SessionHandler> = $vars["SessionHandler"]
<obj_SimpleXMLElement> = $vars["SimpleXMLElement"]
<obj_SimpleXMLIterator> = $vars["SimpleXMLIterator"]
<obj_SplDoublyLinkedList> = $vars["SplDoublyLinkedList"]
<obj_SplFileObject> = $vars["SplFileObject"]
<obj_SplFixedArray> = $vars["SplFixedArray"]
<obj_SplObjectStorage> = $vars["SplObjectStorage"]
<obj_SplPriorityQueue> = $vars["SplPriorityQueue"]
<obj_SplQueue> = $vars["SplQueue"]
<obj_SplStack> = $vars["SplStack"]
